# $schema: ./contrib/example-config/jsonSchema.json
# $schema: https://raw.githubusercontent.com/adorsys/keycloak-config-cli/refs/heads/improve-config-validation-json-schema/contrib/example-config/jsonSchema.json

realm: "benchmark"
displayName: "benchmark Realm"
enabled: true
userManagedAccessAllowed: false
registrationAllowed: false
registrationEmailAsUsername: false
editUsernameAllowed: false
resetPasswordAllowed: false
rememberMe: false
verifyEmail: false
loginWithEmailAllowed: true
duplicateEmailsAllowed: false
sslRequired: external
requiredCredentials:
  - password
smtpServer: {}
revokeRefreshToken: false
ssoSessionIdleTimeout: 28800
ssoSessionMaxLifespan: 50400
ssoSessionIdleTimeoutRememberMe: 0
ssoSessionMaxLifespanRememberMe: 0
accessTokenLifespan: 900
accessTokenLifespanForImplicitFlow: 2100
refreshTokenMaxReuse: 0
offlineSessionIdleTimeout: 1800
offlineSessionMaxLifespanEnabled: false
offlineSessionMaxLifespan: 5184000
accessCodeLifespan: 60
accessCodeLifespanUserAction: 300
accessCodeLifespanLogin: 1800
actionTokenGeneratedByAdminLifespan: 43200
actionTokenGeneratedByUserLifespan: 300
permanentLockout: false
maxFailureWaitSeconds: 900
minimumQuickLoginWaitSeconds: 60
waitIncrementSeconds: 60
quickLoginCheckMilliSeconds: 1000
maxDeltaTimeSeconds: 43200
failureFactor: 30
browserSecurityHeaders:
  xContentTypeOptions: nosniff
  xRobotsTag: none
  xFrameOptions: SAMEORIGIN
  contentSecurityPolicy: "frame-src 'self'; frame-ancestors 'self'; object-src 'none';"
  xXSSProtection: "1; mode=block"
  strictTransportSecurity: "max-age=31536000; includeSubDomains"
bruteForceProtected: false
roles:
  realm:
    - name: role1
    - name: role2
    - name: role3
    - name: role4
    - name: role5
    - name: role6
    - name: role7
    - name: role8
    - name: role9
    - name: role10
    - name: role11
    - name: role12
    - name: role13
    - name: role14
    - name: role15
    - name: role16
    - name: role17
    - name: role18
    - name: role19
    - name: role20
    - name: role21
    - name: role22
    - name: role23
    - name: role24
    - name: role25
    - name: role26
    - name: role27
    - name: role28
    - name: role29
    - name: role30
    - name: role31
    - name: role32
    - name: role33
    - name: role34
    - name: role35
    - name: role36
    - name: role37
    - name: role38
    - name: role39
    - name: role40
    - name: role41
    - name: role42
    - name: role43
    - name: role44
    - name: role45
    - name: role46
    - name: role47
    - name: role48
    - name: role49
    - name: role50
  client:
    client1:
      - name: client1-role
        description: "client1-role Role"
        composite: false
        clientRole: true
    client2:
      - name: client2-role
        description: "client2-role Role"
        composite: false
        clientRole: true
    client3:
      - name: client3-role
        description: "client3-role Role"
        composite: false
        clientRole: true
    client4:
      - name: client4-role
        description: "client4-role Role"
        composite: false
        clientRole: true
    client5:
      - name: client5-role
        description: "client5-role Role"
        composite: false
        clientRole: true
    client6:
      - name: client6-role
        description: "client6-role Role"
        composite: false
        clientRole: true
    client7:
      - name: client7-role
        description: "client7-role Role"
        composite: false
        clientRole: true
    client8:
      - name: client8-role
        description: "client8-role Role"
        composite: false
        clientRole: true
    client9:
      - name: client9-role
        description: "client9-role Role"
        composite: false
        clientRole: true
    client10:
      - name: client10-role
        description: "client10-role Role"
        composite: false
        clientRole: true
    client11:
      - name: client11-role
        description: "client11-role Role"
        composite: false
        clientRole: true
    client12:
      - name: client12-role
        description: "client12-role Role"
        composite: false
        clientRole: true
    client13:
      - name: client13-role
        description: "client13-role Role"
        composite: false
        clientRole: true
    client14:
      - name: client14-role
        description: "client14-role Role"
        composite: false
        clientRole: true
    client15:
      - name: client15-role
        description: "client15-role Role"
        composite: false
        clientRole: true
    client16:
      - name: client16-role
        description: "client16-role Role"
        composite: false
        clientRole: true
    client17:
      - name: client17-role
        description: "client17-role Role"
        composite: false
        clientRole: true
    client18:
      - name: client18-role
        description: "client18-role Role"
        composite: false
        clientRole: true
    client19:
      - name: client19-role
        description: "client19-role Role"
        composite: false
        clientRole: true
    client20:
      - name: client20-role
        description: "client20-role Role"
        composite: false
        clientRole: true
    client21:
      - name: client21-role
        description: "client21-role Role"
        composite: false
        clientRole: true
    client22:
      - name: client22-role
        description: "client22-role Role"
        composite: false
        clientRole: true
    client23:
      - name: client23-role
        description: "client23-role Role"
        composite: false
        clientRole: true
    client24:
      - name: client24-role
        description: "client24-role Role"
        composite: false
        clientRole: true
    client25:
      - name: client25-role
        description: "client25-role Role"
        composite: false
        clientRole: true
    client26:
      - name: client26-role
        description: "client26-role Role"
        composite: false
        clientRole: true
    client27:
      - name: client27-role
        description: "client27-role Role"
        composite: false
        clientRole: true
    client28:
      - name: client28-role
        description: "client28-role Role"
        composite: false
        clientRole: true
    client29:
      - name: client29-role
        description: "client29-role Role"
        composite: false
        clientRole: true
    client30:
      - name: client30-role
        description: "client30-role Role"
        composite: false
        clientRole: true
    client31:
      - name: client31-role
        description: "client31-role Role"
        composite: false
        clientRole: true
    client32:
      - name: client32-role
        description: "client32-role Role"
        composite: false
        clientRole: true
    client33:
      - name: client33-role
        description: "client33-role Role"
        composite: false
        clientRole: true
    client34:
      - name: client34-role
        description: "client34-role Role"
        composite: false
        clientRole: true
    client35:
      - name: client35-role
        description: "client35-role Role"
        composite: false
        clientRole: true
    client36:
      - name: client36-role
        description: "client36-role Role"
        composite: false
        clientRole: true
    client37:
      - name: client37-role
        description: "client37-role Role"
        composite: false
        clientRole: true
    client38:
      - name: client38-role
        description: "client38-role Role"
        composite: false
        clientRole: true
    client39:
      - name: client39-role
        description: "client39-role Role"
        composite: false
        clientRole: true
    client40:
      - name: client40-role
        description: "client40-role Role"
        composite: false
        clientRole: true
    client41:
      - name: client41-role
        description: "client41-role Role"
        composite: false
        clientRole: true
    client42:
      - name: client42-role
        description: "client42-role Role"
        composite: false
        clientRole: true
    client43:
      - name: client43-role
        description: "client43-role Role"
        composite: false
        clientRole: true
    client44:
      - name: client44-role
        description: "client44-role Role"
        composite: false
        clientRole: true
    client45:
      - name: client45-role
        description: "client45-role Role"
        composite: false
        clientRole: true
    client46:
      - name: client46-role
        description: "client46-role Role"
        composite: false
        clientRole: true
    client47:
      - name: client47-role
        description: "client47-role Role"
        composite: false
        clientRole: true
    client48:
      - name: client48-role
        description: "client48-role Role"
        composite: false
        clientRole: true
    client49:
      - name: client49-role
        description: "client49-role Role"
        composite: false
        clientRole: true
    client50:
      - name: client50-role
        description: "client50-role Role"
        composite: false
        clientRole: true
defaultRoles:
  - uma_authorization
  - offline_access
scopeMappings:
  - client: client1
    roles:
      - role1
      - role2
      - role3
      - role4
      - role5
      - role6
      - role7
      - role8
      - role9
      - role10
  - client: client2
    roles:
      - role1
      - role2
      - role3
      - role4
      - role5
      - role6
      - role7
      - role8
      - role9
      - role10
  - client: client3
    roles:
      - role11
      - role12
      - role13
      - role14
      - role15
      - role16
      - role17
      - role18
      - role19
      - role20
  - client: client4
    roles:
      - role11
      - role12
      - role13
      - role14
      - role15
      - role16
      - role17
      - role18
      - role19
      - role20
  - client: client5
    roles:
      - role21
      - role22
      - role23
      - role24
      - role25
      - role26
      - role27
      - role28
      - role29
      - role30
  - client: client6
    roles:
      - role21
      - role22
      - role23
      - role24
      - role25
      - role26
      - role27
      - role28
      - role29
      - role30
  - client: client7
    roles:
      - role31
      - role32
      - role33
      - role34
      - role35
      - role36
      - role37
      - role38
      - role39
      - role40
  - client: client8
    roles:
      - role31
      - role32
      - role33
      - role34
      - role35
      - role36
      - role37
      - role38
      - role39
      - role40
  - client: client9
    roles:
      - role41
      - role42
      - role43
      - role44
      - role45
      - role46
      - role47
      - role48
      - role49
      - role50
  - client: client10
    roles:
      - role41
      - role42
      - role43
      - role44
      - role45
      - role46
      - role47
      - role48
      - role49
      - role50
  - client: client11
    roles:
      - role1
      - role2
      - role3
      - role4
      - role5
      - role6
      - role7
      - role8
      - role9
      - role10
      - role11
      - role12
      - role13
      - role14
      - role15
      - role16
      - role17
      - role18
      - role19
      - role20
      - role21
      - role22
      - role23
      - role24
      - role25
      - role26
      - role27
      - role28
      - role29
      - role30
      - role31
      - role32
      - role33
      - role34
      - role35
      - role36
      - role37
      - role38
      - role39
      - role40
      - role41
      - role42
      - role43
      - role44
      - role45
      - role46
      - role47
      - role48
      - role49
      - role50
clients:
  - clientId: client1
    name: client1
    description: "client1"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client1-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client1-read-only
          role: client1-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client1-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client1-standard
          role: client1-test-standard
      - name: "RoleMapper client1-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client1-lead
          role: client1-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client1-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client1-test
          role: client1-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client1-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client1-batch
          role: client1-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client1-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client1-tech
          role: client1-test-tech
  - clientId: client2
    name: client2
    description: "client2"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client2-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client2-read-only
          role: client2-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client2-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client2-standard
          role: client2-test-standard
      - name: "RoleMapper client2-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client2-lead
          role: client2-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client2-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client2-test
          role: client2-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client2-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client2-batch
          role: client2-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client2-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client2-tech
          role: client2-test-tech
  - clientId: client3
    name: client3
    description: "client3"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client3-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client3-read-only
          role: client3-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client3-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client3-standard
          role: client3-test-standard
      - name: "RoleMapper client3-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client3-lead
          role: client3-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client3-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client3-test
          role: client3-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client3-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client3-batch
          role: client3-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client3-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client3-tech
          role: client3-test-tech
  - clientId: client4
    name: client4
    description: "client4"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client4-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client4-read-only
          role: client4-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client4-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client4-standard
          role: client4-test-standard
      - name: "RoleMapper client4-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client4-lead
          role: client4-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client4-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client4-test
          role: client4-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client4-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client4-batch
          role: client4-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client4-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client4-tech
          role: client4-test-tech
  - clientId: client5
    name: client5
    description: "client5"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client5-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client5-read-only
          role: client5-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client5-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client5-standard
          role: client5-test-standard
      - name: "RoleMapper client5-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client5-lead
          role: client5-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client5-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client5-test
          role: client5-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client5-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client5-batch
          role: client5-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client5-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client5-tech
          role: client5-test-tech
  - clientId: client6
    name: client6
    description: "client6"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client6-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client6-read-only
          role: client6-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client6-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client6-standard
          role: client6-test-standard
      - name: "RoleMapper client6-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client6-lead
          role: client6-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client6-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client6-test
          role: client6-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client6-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client6-batch
          role: client6-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client6-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client6-tech
          role: client6-test-tech

  - clientId: client7
    name: client7
    description: "client7"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client7-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client7-read-only
          role: client7-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client7-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client7-standard
          role: client7-test-standard
      - name: "RoleMapper client7-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client7-lead
          role: client7-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client7-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client7-test
          role: client7-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client7-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client7-batch
          role: client7-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client7-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client7-tech
          role: client7-test-tech
  - clientId: client8
    name: client8
    description: "client8"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client8-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client8-read-only
          role: client8-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client8-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client8-standard
          role: client8-test-standard
      - name: "RoleMapper client8-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client8-lead
          role: client8-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client8-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client8-test
          role: client8-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client8-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client8-batch
          role: client8-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client8-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client8-tech
          role: client8-test-tech
  - clientId: client9
    name: client9
    description: "client9"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client9-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client9-read-only
          role: client9-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client9-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client9-standard
          role: client9-test-standard
      - name: "RoleMapper client9-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client9-lead
          role: client9-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client9-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client9-test
          role: client9-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client9-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client9-batch
          role: client9-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client9-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client9-tech
          role: client9-test-tech
  - clientId: client10
    name: client10
    description: "client10"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client10-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client10-read-only
          role: client10-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client10-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client10-standard
          role: client10-test-standard
      - name: "RoleMapper client10-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client10-lead
          role: client10-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client10-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client10-test
          role: client10-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client10-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client10-batch
          role: client10-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client10-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client10-tech
          role: client10-test-tech
  - clientId: client11
    name: client11
    description: "client11"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client11-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client11-read-only
          role: client11-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client11-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client11-standard
          role: client11-test-standard
      - name: "RoleMapper client11-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client11-lead
          role: client11-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client11-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client11-test
          role: client11-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client11-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client11-batch
          role: client11-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client11-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client11-tech
          role: client11-test-tech
  - clientId: client12
    name: client12
    description: "client12"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client12-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client12-read-only
          role: client12-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client12-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client12-standard
          role: client12-test-standard
      - name: "RoleMapper client12-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client12-lead
          role: client12-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client12-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client12-test
          role: client12-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client12-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client12-batch
          role: client12-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client12-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client12-tech
          role: client12-test-tech
  - clientId: client13
    name: client13
    description: "client13"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client13-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client13-read-only
          role: client13-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client13-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client13-standard
          role: client13-test-standard
      - name: "RoleMapper client13-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client13-lead
          role: client13-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client13-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client13-test
          role: client13-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client13-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client13-batch
          role: client13-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client13-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client13-tech
          role: client13-test-tech
  - clientId: client14
    name: client14
    description: "client14"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client14-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client14-read-only
          role: client14-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client14-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client14-standard
          role: client14-test-standard
      - name: "RoleMapper client14-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client14-lead
          role: client14-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client14-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client14-test
          role: client14-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client14-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client14-batch
          role: client14-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client14-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client14-tech
          role: client14-test-tech
  - clientId: client15
    name: client15
    description: "client15"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client15-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client15-read-only
          role: client15-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client15-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client15-standard
          role: client15-test-standard
      - name: "RoleMapper client15-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client15-lead
          role: client15-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client15-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client15-test
          role: client15-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client15-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client15-batch
          role: client15-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client15-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client15-tech
          role: client15-test-tech
  - clientId: client16
    name: client16
    description: "client16"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client16-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client16-read-only
          role: client16-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client16-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client16-standard
          role: client16-test-standard
      - name: "RoleMapper client16-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client16-lead
          role: client16-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client16-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client16-test
          role: client16-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client16-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client16-batch
          role: client16-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client16-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client16-tech
          role: client16-test-tech
  - clientId: client17
    name: client17
    description: "client17"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client17-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client17-read-only
          role: client17-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client17-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client17-standard
          role: client17-test-standard
      - name: "RoleMapper client17-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client17-lead
          role: client17-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client17-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client17-test
          role: client17-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client17-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client17-batch
          role: client17-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client17-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client17-tech
          role: client17-test-tech
  - clientId: client18
    name: client18
    description: "client18"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client18-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client18-read-only
          role: client18-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client18-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client18-standard
          role: client18-test-standard
      - name: "RoleMapper client18-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client18-lead
          role: client18-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client18-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client18-test
          role: client18-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client18-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client18-batch
          role: client18-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client18-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client18-tech
          role: client18-test-tech
  - clientId: client19
    name: client19
    description: "client19"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client19-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client19-read-only
          role: client19-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client19-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client19-standard
          role: client19-test-standard
      - name: "RoleMapper client19-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client19-lead
          role: client19-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client19-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client19-test
          role: client19-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client19-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client19-batch
          role: client19-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client19-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client19-tech
          role: client19-test-tech
  - clientId: client20
    name: client20
    description: "client20"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client20-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client20-read-only
          role: client20-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client20-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client20-standard
          role: client20-test-standard
      - name: "RoleMapper client20-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client20-lead
          role: client20-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client20-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client20-test
          role: client20-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client20-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client20-batch
          role: client20-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client20-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client20-tech
          role: client20-test-tech
  - clientId: client21
    name: client21
    description: "client21"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client21-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client21-read-only
          role: client21-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client21-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client21-standard
          role: client21-test-standard
      - name: "RoleMapper client21-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client21-lead
          role: client21-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client21-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client21-test
          role: client21-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client21-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client21-batch
          role: client21-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client21-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client21-tech
          role: client21-test-tech
  - clientId: client22
    name: client22
    description: "client22"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client22-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client22-read-only
          role: client22-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client22-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client22-standard
          role: client22-test-standard
      - name: "RoleMapper client22-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client22-lead
          role: client22-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client22-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client22-test
          role: client22-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client22-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client22-batch
          role: client22-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client22-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client22-tech
          role: client22-test-tech
  - clientId: client23
    name: client23
    description: "client23"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client23-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client23-read-only
          role: client23-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client23-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client23-standard
          role: client23-test-standard
      - name: "RoleMapper client23-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client23-lead
          role: client23-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client23-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client23-test
          role: client23-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client23-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client23-batch
          role: client23-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client23-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client23-tech
          role: client23-test-tech
  - clientId: client24
    name: client24
    description: "client24"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client24-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client24-read-only
          role: client24-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client24-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client24-standard
          role: client24-test-standard
      - name: "RoleMapper client24-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client24-lead
          role: client24-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client24-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client24-test
          role: client24-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client24-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client24-batch
          role: client24-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client24-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client24-tech
          role: client24-test-tech
  - clientId: client25
    name: client25
    description: "client25"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client25-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client25-read-only
          role: client25-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client25-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client25-standard
          role: client25-test-standard
      - name: "RoleMapper client25-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client25-lead
          role: client25-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client25-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client25-test
          role: client25-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client25-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client25-batch
          role: client25-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client25-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client25-tech
          role: client25-test-tech
  - clientId: client26
    name: client26
    description: "client26"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client26-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client26-read-only
          role: client26-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client26-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client26-standard
          role: client26-test-standard
      - name: "RoleMapper client26-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client26-lead
          role: client26-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client26-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client26-test
          role: client26-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client26-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client26-batch
          role: client26-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client26-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client26-tech
          role: client26-test-tech
  - clientId: client27
    name: client27
    description: "client27"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client27-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client27-read-only
          role: client27-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client27-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client27-standard
          role: client27-test-standard
      - name: "RoleMapper client27-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client27-lead
          role: client27-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client27-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client27-test
          role: client27-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client27-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client27-batch
          role: client27-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client27-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client27-tech
          role: client27-test-tech
  - clientId: client28
    name: client28
    description: "client28"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client28-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client28-read-only
          role: client28-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client28-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client28-standard
          role: client28-test-standard
      - name: "RoleMapper client28-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client28-lead
          role: client28-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client28-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client28-test
          role: client28-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client28-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client28-batch
          role: client28-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client28-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client28-tech
          role: client28-test-tech
  - clientId: client29
    name: client29
    description: "client29"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client29-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client29-read-only
          role: client29-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client29-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client29-standard
          role: client29-test-standard
      - name: "RoleMapper client29-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client29-lead
          role: client29-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client29-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client29-test
          role: client29-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client29-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client29-batch
          role: client29-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client29-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client29-tech
          role: client29-test-tech
  - clientId: client30
    name: client30
    description: "client30"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client30-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client30-read-only
          role: client30-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client30-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client30-standard
          role: client30-test-standard
      - name: "RoleMapper client30-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client30-lead
          role: client30-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client30-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client30-test
          role: client30-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client30-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client30-batch
          role: client30-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client30-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client30-tech
          role: client30-test-tech
  - clientId: client31
    name: client31
    description: "client31"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client31-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client31-read-only
          role: client31-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client31-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client31-standard
          role: client31-test-standard
      - name: "RoleMapper client31-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client31-lead
          role: client31-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client31-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client31-test
          role: client31-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client31-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client31-batch
          role: client31-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client31-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client31-tech
          role: client31-test-tech
  - clientId: client32
    name: client32
    description: "client32"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client32-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client32-read-only
          role: client32-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client32-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client32-standard
          role: client32-test-standard
      - name: "RoleMapper client32-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client32-lead
          role: client32-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client32-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client32-test
          role: client32-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client32-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client32-batch
          role: client32-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client32-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client32-tech
          role: client32-test-tech
  - clientId: client33
    name: client33
    description: "client33"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client33-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client33-read-only
          role: client33-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client33-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client33-standard
          role: client33-test-standard
      - name: "RoleMapper client33-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client33-lead
          role: client33-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client33-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client33-test
          role: client33-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client33-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client33-batch
          role: client33-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client33-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client33-tech
          role: client33-test-tech
  - clientId: client34
    name: client34
    description: "client34"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client34-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client34-read-only
          role: client34-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client34-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client34-standard
          role: client34-test-standard
      - name: "RoleMapper client34-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client34-lead
          role: client34-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client34-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client34-test
          role: client34-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client34-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client34-batch
          role: client34-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client34-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client34-tech
          role: client34-test-tech
  - clientId: client35
    name: client35
    description: "client35"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client35-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client35-read-only
          role: client35-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client35-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client35-standard
          role: client35-test-standard
      - name: "RoleMapper client35-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client35-lead
          role: client35-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client35-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client35-test
          role: client35-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client35-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client35-batch
          role: client35-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client35-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client35-tech
          role: client35-test-tech
  - clientId: client36
    name: client36
    description: "client36"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client36-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client36-read-only
          role: client36-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client36-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client36-standard
          role: client36-test-standard
      - name: "RoleMapper client36-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client36-lead
          role: client36-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client36-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client36-test
          role: client36-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client36-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client36-batch
          role: client36-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client36-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client36-tech
          role: client36-test-tech
  - clientId: client37
    name: client37
    description: "client37"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client37-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client37-read-only
          role: client37-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client37-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client37-standard
          role: client37-test-standard
      - name: "RoleMapper client37-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client37-lead
          role: client37-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client37-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client37-test
          role: client37-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client37-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client37-batch
          role: client37-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client37-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client37-tech
          role: client37-test-tech
  - clientId: client38
    name: client38
    description: "client38"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client38-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client38-read-only
          role: client38-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client38-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client38-standard
          role: client38-test-standard
      - name: "RoleMapper client38-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client38-lead
          role: client38-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client38-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client38-test
          role: client38-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client38-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client38-batch
          role: client38-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client38-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client38-tech
          role: client38-test-tech
  - clientId: client39
    name: client39
    description: "client39"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client39-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client39-read-only
          role: client39-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client39-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client39-standard
          role: client39-test-standard
      - name: "RoleMapper client39-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client39-lead
          role: client39-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client39-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client39-test
          role: client39-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client39-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client39-batch
          role: client39-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client39-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client39-tech
          role: client39-test-tech
  - clientId: client40
    name: client40
    description: "client40"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client40-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client40-read-only
          role: client40-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client40-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client40-standard
          role: client40-test-standard
      - name: "RoleMapper client40-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client40-lead
          role: client40-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client40-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client40-test
          role: client40-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client40-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client40-batch
          role: client40-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client40-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client40-tech
          role: client40-test-tech
  - clientId: client41
    name: client41
    description: "client41"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client41-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client41-read-only
          role: client41-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client41-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client41-standard
          role: client41-test-standard
      - name: "RoleMapper client41-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client41-lead
          role: client41-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client41-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client41-test
          role: client41-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client41-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client41-batch
          role: client41-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client41-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client41-tech
          role: client41-test-tech
  - clientId: client42
    name: client42
    description: "client42"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client42-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client42-read-only
          role: client42-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client42-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client42-standard
          role: client42-test-standard
      - name: "RoleMapper client42-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client42-lead
          role: client42-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client42-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client42-test
          role: client42-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client42-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client42-batch
          role: client42-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client42-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client42-tech
          role: client42-test-tech
  - clientId: client43
    name: client43
    description: "client43"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client43-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client43-read-only
          role: client43-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client43-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client43-standard
          role: client43-test-standard
      - name: "RoleMapper client43-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client43-lead
          role: client43-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client43-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client43-test
          role: client43-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client43-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client43-batch
          role: client43-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client43-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client43-tech
          role: client43-test-tech
  - clientId: client44
    name: client44
    description: "client44"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client44-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client44-read-only
          role: client44-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client44-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client44-standard
          role: client44-test-standard
      - name: "RoleMapper client44-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client44-lead
          role: client44-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client44-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client44-test
          role: client44-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client44-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client44-batch
          role: client44-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client44-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client44-tech
          role: client44-test-tech
  - clientId: client45
    name: client45
    description: "client45"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client45-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client45-read-only
          role: client45-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client45-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client45-standard
          role: client45-test-standard
      - name: "RoleMapper client45-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client45-lead
          role: client45-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client45-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client45-test
          role: client45-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client45-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client45-batch
          role: client45-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client45-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client45-tech
          role: client45-test-tech
  - clientId: client46
    name: client46
    description: "client46"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client46-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client46-read-only
          role: client46-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client46-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client46-standard
          role: client46-test-standard
      - name: "RoleMapper client46-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client46-lead
          role: client46-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client46-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client46-test
          role: client46-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client46-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client46-batch
          role: client46-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client46-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client46-tech
          role: client46-test-tech
  - clientId: client47
    name: client47
    description: "client47"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client47-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client47-read-only
          role: client47-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client47-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client47-standard
          role: client47-test-standard
      - name: "RoleMapper client47-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client47-lead
          role: client47-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client47-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client47-test
          role: client47-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client47-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client47-batch
          role: client47-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client47-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client47-tech
          role: client47-test-tech
  - clientId: client48
    name: client48
    description: "client48"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client48-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client48-read-only
          role: client48-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client48-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client48-standard
          role: client48-test-standard
      - name: "RoleMapper client48-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client48-lead
          role: client48-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client48-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client48-test
          role: client48-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client48-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client48-batch
          role: client48-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client48-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client48-tech
          role: client48-test-tech
  - clientId: client49
    name: client49
    description: "client49"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client49-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client49-read-only
          role: client49-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client49-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client49-standard
          role: client49-test-standard
      - name: "RoleMapper client49-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client49-lead
          role: client49-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client49-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client49-test
          role: client49-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client49-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client49-batch
          role: client49-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client49-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client49-tech
          role: client49-test-tech
  - clientId: client50
    name: client50
    description: "client50"
    surrogateAuthRequired: false
    enabled: true
    redirectUris:
      - "*"
    webOrigins:
      - "*"
    notBefore: 0
    bearerOnly: false
    consentRequired: false
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    publicClient: true
    frontchannelLogout: false
    protocol: openid-connect
    attributes: {}
    fullScopeAllowed: false
    nodeReRegistrationTimeout: -1
    protocolMappers:
      - name: "RoleMapper client50-read-only"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client50-read-only
          role: client50-test-read-only
      - name: "PropertyMapper family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: "RoleMapper client50-standard"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client50-standard
          role: client50-test-standard
      - name: "RoleMapper client50-lead"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client50-lead
          role: client50-test-lead
      - name: "Client IP Address"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientAddress
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientAddress
          jsonType.label: String
      - name: "RoleMapper client50-test"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client50-test
          role: client50-test-test
      - name: "PropertyMapper email"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
      - name: "Client ID"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientId
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientId
          jsonType.label: String
      - name: "PropertyMapper full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: "true"
          access.token.claim: "true"
      - name: "PropertyMapper given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: "RoleMapper client50-batch"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client50-batch
          role: client50-test-batch
      - name: "Client Host"
        protocol: openid-connect
        protocolMapper: oidc-usersessionmodel-note-mapper
        consentRequired: false
        config:
          user.session.note: clientHost
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: clientHost
          jsonType.label: String
      - name: "PropertyMapper username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: "RoleMapper client50-tech"
        protocol: openid-connect
        protocolMapper: oidc-role-name-mapper
        consentRequired: false
        config:
          new.role.name: client50-tech
          role: client50-test-tech

clientScopes:
  - name: offline_access
    description: "OpenID Connect built-in scope: offline_access"
    protocol: openid-connect
    attributes:
      consent.screen.text: "${offlineAccessScopeConsentText}"
      display.on.consent.screen: "true"
  - name: role_list
    description: "SAML role list"
    protocol: saml
    attributes:
      consent.screen.text: "${samlRoleListScopeConsentText}"
      display.on.consent.screen: "true"
    protocolMappers:
      - name: "role list"
        protocol: saml
        protocolMapper: saml-role-list-mapper
        consentRequired: false
        config:
          single: "false"
          attribute.nameformat: Basic
          attribute.name: Role
  - name: profile
    description: "OpenID Connect built-in scope: profile"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "true"
      display.on.consent.screen: "true"
      consent.screen.text: "${profileScopeConsentText}"
    protocolMappers:
      - name: birthdate
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: birthdate
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: birthdate
          jsonType.label: String
      - name: profile
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: profile
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: profile
          jsonType.label: String
      - name: "family name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: lastName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: family_name
          jsonType.label: String
      - name: username
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: preferred_username
          jsonType.label: String
      - name: gender
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: gender
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: gender
          jsonType.label: String
      - name: "middle name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: middleName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: middle_name
          jsonType.label: String
      - name: "full name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        consentRequired: false
        config:
          id.token.claim: "true"
          access.token.claim: "true"
          userinfo.token.claim: "true"
      - name: website
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: website
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: website
          jsonType.label: String
      - name: picture
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: picture
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: picture
          jsonType.label: String
      - name: zoneinfo
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: zoneinfo
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: zoneinfo
          jsonType.label: String
      - name: "updated at"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: updatedAt
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: updated_at
          jsonType.label: String
      - name: "given name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: firstName
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: given_name
          jsonType.label: String
      - name: nickname
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: nickname
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: nickname
          jsonType.label: String
      - name: locale
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: locale
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: locale
          jsonType.label: String
  - name: email
    description: "OpenID Connect built-in scope: email"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "true"
      display.on.consent.screen: "true"
      consent.screen.text: "${emailScopeConsentText}"
    protocolMappers:
      - name: "email verified"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: emailVerified
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email_verified
          jsonType.label: boolean
      - name: email
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
  - name: address
    description: "OpenID Connect built-in scope: address"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "true"
      display.on.consent.screen: "true"
      consent.screen.text: "${addressScopeConsentText}"
    protocolMappers:
      - name: address
        protocol: openid-connect
        protocolMapper: oidc-address-mapper
        consentRequired: false
        config:
          user.attribute.formatted: formatted
          user.attribute.country: country
          user.attribute.postal_code: postal_code
          userinfo.token.claim: "true"
          user.attribute.street: street
          id.token.claim: "true"
          user.attribute.region: region
          access.token.claim: "true"
          user.attribute.locality: locality
  - name: phone
    description: "OpenID Connect built-in scope: phone"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "true"
      display.on.consent.screen: "true"
      consent.screen.text: "${phoneScopeConsentText}"
    protocolMappers:
      - name: "phone number"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: phoneNumber
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: phone_number
          jsonType.label: String
      - name: "phone number verified"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: phoneNumberVerified
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: phone_number_verified
          jsonType.label: boolean
  - name: roles
    description: "OpenID Connect scope for add user roles to the access token"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "false"
      display.on.consent.screen: "true"
      consent.screen.text: "${rolesScopeConsentText}"
    protocolMappers:
      - name: "audience resolve"
        protocol: openid-connect
        protocolMapper: oidc-audience-resolve-mapper
        consentRequired: false
        config: {}
      - name: "client roles"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-client-role-mapper
        consentRequired: false
        config:
          multivalued: "true"
          user.attribute: foo
          access.token.claim: "true"
          claim.name: "resource_access.${client_id}.roles"
          jsonType.label: String
      - name: "realm roles"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-realm-role-mapper
        consentRequired: false
        config:
          multivalued: "true"
          user.attribute: foo
          access.token.claim: "true"
          claim.name: realm_access.roles
          jsonType.label: String
  - name: microprofile-jwt
    description: "Microprofile - JWT built-in scope"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "true"
      display.on.consent.screen: "false"
    protocolMappers:
      - name: upn
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: username
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: upn
          jsonType.label: String
      - name: groups
        protocol: openid-connect
        protocolMapper: oidc-usermodel-realm-role-mapper
        consentRequired: false
        config:
          multivalued: "true"
          user.attribute: foo
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: groups
          jsonType.label: String
  - name: web-origins
    description: "OpenID Connect scope for add allowed web origins to the access token"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "false"
      display.on.consent.screen: "false"
      consent.screen.text: ""
    protocolMappers:
      - name: "allowed web origins"
        protocol: openid-connect
        protocolMapper: oidc-allowed-origins-mapper
        consentRequired: false
        config: {}
  - name: example-email
    description: "OpenID Connect examplecustom scope: email"
    protocol: openid-connect
    attributes:
      include.in.token.scope: "true"
      display.on.consent.screen: "true"
      consent.screen.text: "${emailScopeConsentText}"
    protocolMappers:
      - name: email
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          user.attribute: email
          id.token.claim: "true"
          access.token.claim: "true"
          claim.name: email
          jsonType.label: String
defaultDefaultClientScopes:
  - profile
  - example-email
  - roles
  - web-origins
defaultOptionalClientScopes:
  - offline_access
  - address
  - phone
  - microprofile-jwt
components:
  org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy:
    - name: "Allowed Client Scopes"
      providerId: allowed-client-templates
      subType: authenticated
      subComponents: {}
      config:
        allow-default-scopes:
          - "true"
    - name: "Trusted Hosts"
      providerId: trusted-hosts
      subType: anonymous
      subComponents: {}
      config:
        host-sending-registration-request-must-match:
          - "true"
        client-uris-must-match:
          - "true"
    - name: "Allowed Protocol Mapper Types"
      providerId: allowed-protocol-mappers
      subType: anonymous
      subComponents: {}
      config:
        allowed-protocol-mapper-types:
          - oidc-usermodel-attribute-mapper
          - oidc-sha256-pairwise-sub-mapper
          - saml-user-attribute-mapper
          - oidc-full-name-mapper
          - saml-user-property-mapper
          - oidc-usermodel-property-mapper
          - saml-role-list-mapper
          - oidc-address-mapper
    - name: "Consent Required"
      providerId: consent-required
      subType: anonymous
      subComponents: {}
      config: {}
    - name: "Full Scope Disabled"
      providerId: scope
      subType: anonymous
      subComponents: {}
      config: {}
    - name: "Max Clients Limit"
      providerId: max-clients
      subType: anonymous
      subComponents: {}
      config:
        max-clients:
          - "200"
    - name: "Allowed Protocol Mapper Types"
      providerId: allowed-protocol-mappers
      subType: authenticated
      subComponents: {}
      config:
        allowed-protocol-mapper-types:
          - oidc-usermodel-property-mapper
          - oidc-usermodel-attribute-mapper
          - saml-role-list-mapper
          - saml-user-attribute-mapper
          - saml-user-property-mapper
          - oidc-full-name-mapper
          - oidc-address-mapper
          - oidc-sha256-pairwise-sub-mapper
    - name: "Allowed Client Scopes"
      providerId: allowed-client-templates
      subType: anonymous
      subComponents: {}
      config:
        allow-default-scopes:
          - "true"
  org.keycloak.storage.UserStorageProvider:
    - name: AD
      providerId: ldap
      subComponents:
        org.keycloak.storage.ldap.mappers.LDAPStorageMapper:
          - name: "creation date"
            providerId: user-attribute-ldap-mapper
            subComponents: {}
            config:
              ldap.attribute:
                - whenCreated
              is.mandatory.in.ldap:
                - "false"
              read.only:
                - "true"
              always.read.value.from.ldap:
                - "true"
              user.model.attribute:
                - createTimestamp
          - name: "modify date"
            providerId: user-attribute-ldap-mapper
            subComponents: {}
            config:
              ldap.attribute:
                - whenChanged
              is.mandatory.in.ldap:
                - "false"
              read.only:
                - "true"
              always.read.value.from.ldap:
                - "true"
              user.model.attribute:
                - modifyTimestamp
          - name: username
            providerId: user-attribute-ldap-mapper
            subComponents: {}
            config:
              ldap.attribute:
                - cn
              is.mandatory.in.ldap:
                - "true"
              always.read.value.from.ldap:
                - "false"
              read.only:
                - "true"
              user.model.attribute:
                - username
          - name: "LDAP Country Mapper"
            providerId: user-attribute-ldap-mapper
            subComponents: {}
            config:
              ldap.attribute:
                - c
              is.mandatory.in.ldap:
                - "false"
              is.binary.attribute:
                - "false"
              read.only:
                - "true"
              user.model.attribute:
                - country
          - name: "first name"
            providerId: user-attribute-ldap-mapper
            subComponents: {}
            config:
              ldap.attribute:
                - givenName
              is.mandatory.in.ldap:
                - "true"
              always.read.value.from.ldap:
                - "true"
              read.only:
                - "true"
              user.model.attribute:
                - firstName
          - name: email
            providerId: user-attribute-ldap-mapper
            subComponents: {}
            config:
              ldap.attribute:
                - mail
              is.mandatory.in.ldap:
                - "false"
              read.only:
                - "true"
              always.read.value.from.ldap:
                - "false"
              user.model.attribute:
                - email
          - name: "last name"
            providerId: user-attribute-ldap-mapper
            subComponents: {}
            config:
              ldap.attribute:
                - sn
              is.mandatory.in.ldap:
                - "true"
              always.read.value.from.ldap:
                - "true"
              read.only:
                - "true"
              user.model.attribute:
                - lastName
          - name: "LDAP Role Mapper"
            providerId: role-ldap-mapper
            subComponents: {}
            config:
              mode:
                - IMPORT
              membership.attribute.type:
                - DN
              roles.dn:
                - "DC=exampleDC=local"
              user.roles.retrieve.strategy:
                - LOAD_ROLES_BY_MEMBER_ATTRIBUTE
              membership.user.ldap.attribute:
                - uid
              membership.ldap.attribute:
                - member
              role.name.ldap.attribute:
                - cn
              use.realm.roles.mapping:
                - "true"
              role.object.classes:
                - group
              roles.ldap.filter:
                - "(&(objectClass=group)(cn=*-test-*))"
      config:
        enabled:
          - "false"
        pagination:
          - "true"
        fullSyncPeriod:
          - "-1"
        searchScope:
          - "2"
        useTruststoreSpi:
          - ldapsOnly
        usersDn:
          - "DC=exampleDC=local"
        maxLifespan:
          - "3600000"
        connectionPooling:
          - "true"
        cachePolicy:
          - MAX_LIFESPAN
        priority:
          - "0"
        importEnabled:
          - "false"
        userObjectClasses:
          - "person organizationalPerson user"
        bindDn:
          - ${LDAP_USER}
        usernameLDAPAttribute:
          - cn
        changedSyncPeriod:
          - "-1"
        bindCredential:
          - ${LDAP_PASSWORD}
        rdnLDAPAttribute:
          - cn
        vendor:
          - ad
        editMode:
          - READ_ONLY
        uuidLDAPAttribute:
          - objectGUID
        connectionUrl:
          - "ldaps://example.local"
        syncRegistrations:
          - "false"
        authType:
          - simple
        batchSizeForSync:
          - "3600"
        changedSyncEnabled:
          - false
  org.keycloak.keys.KeyProvider:
    - name: aes-generated
      providerId: aes-generated
      subComponents: {}
      config:
        priority:
          - "100"
    - name: hmac-generated
      providerId: hmac-generated
      subComponents: {}
      config:
        active:
          - "true"
        secretSize:
          - "512"
        priority:
          - "0"
        enabled:
          - "true"
    - name: rsa-generated
      providerId: rsa-generated
      subComponents: {}
      config:
        keySize:
          - "4096"
        active:
          - "true"
        priority:
          - "0"
        enabled:
          - "true"
users:
  - username: user0
    enabled: true
    email: user0@example.local
    firstName: User
    lastName: 0
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role1
      - role2
      - role3
      - role4
      - role5
      - role6
      - role7
      - role8
      - role9
      - role10
      - role11
      - role12
      - role13
      - role14
      - role15
      - role16
      - role17
      - role18
      - role19
      - role20
      - role21
      - role22
      - role23
      - role24
      - role25
      - role26
      - role27
      - role28
      - role29
      - role30
      - role31
      - role32
      - role33
      - role34
      - role35
      - role36
      - role37
      - role38
      - role39
      - role40
      - role41
      - role42
      - role43
      - role44
      - role45
      - role46
      - role47
      - role48
      - role49
      - role50
  - username: user1
    enabled: true
    email: user1@example.local
    firstName: User
    lastName: 1
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role1
  - username: user2
    enabled: true
    email: user2@example.local
    firstName: User
    lastName: 2
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role2
  - username: user3
    enabled: true
    email: user3@example.local
    firstName: User
    lastName: 3
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role3
  - username: user4
    enabled: true
    email: user4@example.local
    firstName: User
    lastName: 4
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role4
  - username: user5
    enabled: true
    email: user5@example.local
    firstName: User
    lastName: 5
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role5
  - username: user6
    enabled: true
    email: user6@example.local
    firstName: User
    lastName: 6
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role6
  - username: user7
    enabled: true
    email: user7@example.local
    firstName: User
    lastName: 7
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role7
  - username: user8
    enabled: true
    email: user8@example.local
    firstName: User
    lastName: 8
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role8
  - username: user9
    enabled: true
    email: user9@example.local
    firstName: User
    lastName: 9
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role9
  - username: user10
    enabled: true
    email: user10@example.local
    firstName: User
    lastName: 10
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role10
  - username: user11
    enabled: true
    email: user11@example.local
    firstName: User
    lastName: 11
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role11
  - username: user12
    enabled: true
    email: user12@example.local
    firstName: User
    lastName: 12
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role12
  - username: user13
    enabled: true
    email: user13@example.local
    firstName: User
    lastName: 13
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role13
  - username: user14
    enabled: true
    email: user14@example.local
    firstName: User
    lastName: 14
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role14
  - username: user15
    enabled: true
    email: user15@example.local
    firstName: User
    lastName: 15
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role15
  - username: user16
    enabled: true
    email: user16@example.local
    firstName: User
    lastName: 16
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role16
  - username: user17
    enabled: true
    email: user17@example.local
    firstName: User
    lastName: 17
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role17
  - username: user18
    enabled: true
    email: user18@example.local
    firstName: User
    lastName: 18
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role18
  - username: user19
    enabled: true
    email: user19@example.local
    firstName: User
    lastName: 19
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role19
  - username: user20
    enabled: true
    email: user20@example.local
    firstName: User
    lastName: 20
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role20
  - username: user21
    enabled: true
    email: user21@example.local
    firstName: User
    lastName: 21
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role21
  - username: user22
    enabled: true
    email: user22@example.local
    firstName: User
    lastName: 22
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role22
  - username: user23
    enabled: true
    email: user23@example.local
    firstName: User
    lastName: 23
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role23
  - username: user24
    enabled: true
    email: user24@example.local
    firstName: User
    lastName: 24
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role24
  - username: user25
    enabled: true
    email: user25@example.local
    firstName: User
    lastName: 25
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role25
  - username: user26
    enabled: true
    email: user26@example.local
    firstName: User
    lastName: 26
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role26
  - username: user27
    enabled: true
    email: user27@example.local
    firstName: User
    lastName: 27
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role27
  - username: user28
    enabled: true
    email: user28@example.local
    firstName: User
    lastName: 28
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role28
  - username: user29
    enabled: true
    email: user29@example.local
    firstName: User
    lastName: 29
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role29
  - username: user30
    enabled: true
    email: user30@example.local
    firstName: User
    lastName: 30
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role30
  - username: user31
    enabled: true
    email: user31@example.local
    firstName: User
    lastName: 31
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role31
  - username: user32
    enabled: true
    email: user32@example.local
    firstName: User
    lastName: 32
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role32
  - username: user33
    enabled: true
    email: user33@example.local
    firstName: User
    lastName: 33
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role33
  - username: user34
    enabled: true
    email: user34@example.local
    firstName: User
    lastName: 34
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role34
  - username: user35
    enabled: true
    email: user35@example.local
    firstName: User
    lastName: 35
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role35
  - username: user36
    enabled: true
    email: user36@example.local
    firstName: User
    lastName: 36
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role36
  - username: user37
    enabled: true
    email: user37@example.local
    firstName: User
    lastName: 37
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role37
  - username: user38
    enabled: true
    email: user38@example.local
    firstName: User
    lastName: 38
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role38
  - username: user39
    enabled: true
    email: user39@example.local
    firstName: User
    lastName: 39
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role39
  - username: user40
    enabled: true
    email: user40@example.local
    firstName: User
    lastName: 40
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role40
  - username: user41
    enabled: true
    email: user41@example.local
    firstName: User
    lastName: 41
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role41
  - username: user42
    enabled: true
    email: user42@example.local
    firstName: User
    lastName: 42
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role42
  - username: user43
    enabled: true
    email: user43@example.local
    firstName: User
    lastName: 43
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role43
  - username: user44
    enabled: true
    email: user44@example.local
    firstName: User
    lastName: 44
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role44
  - username: user45
    enabled: true
    email: user45@example.local
    firstName: User
    lastName: 45
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role45
  - username: user46
    enabled: true
    email: user46@example.local
    firstName: User
    lastName: 46
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role46
  - username: user47
    enabled: true
    email: user47@example.local
    firstName: User
    lastName: 47
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role47
  - username: user48
    enabled: true
    email: user48@example.local
    firstName: User
    lastName: 48
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role48
  - username: user49
    enabled: true
    email: user49@example.local
    firstName: User
    lastName: 49
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role49
  - username: user50
    enabled: true
    email: user50@example.local
    firstName: User
    lastName: 50
    attributes:
      locale:
        - "de"
    credentials:
      - type: password
        value: password
        temporary: false
    realmRoles:
      - role50
authenticationFlows:
  - alias: "Account verification options"
    description: "Method with which to verity the existing account"
    providerId: basic-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticator: idp-email-verification
        requirement: ALTERNATIVE
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: ALTERNATIVE
        priority: 20
        flowAlias: "Verify Existing Account by Re-authentication"
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: "Authentication Options"
    description: "Authentication options."
    providerId: basic-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticator: basic-auth
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: basic-auth-otp
        requirement: DISABLED
        priority: 20
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: auth-spnego
        requirement: DISABLED
        priority: 30
        autheticatorFlow: false
        authenticatorFlow: false
  - alias: "Browser - Conditional OTP"
    description: "Flow to determine if the OTP is required for the authentication"
    providerId: basic-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticator: conditional-user-configured
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: auth-otp-form
        requirement: REQUIRED
        priority: 20
        autheticatorFlow: false
        authenticatorFlow: false
  - alias: "Direct Grant - Conditional OTP"
    description: "Flow to determine if the OTP is required for the authentication"
    providerId: basic-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticator: conditional-user-configured
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: direct-grant-validate-otp
        requirement: REQUIRED
        priority: 20
        autheticatorFlow: false
        authenticatorFlow: false
  - alias: "First broker login - Conditional OTP"
    description: "Flow to determine if the OTP is required for the authentication"
    providerId: basic-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticator: conditional-user-configured
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: auth-otp-form
        requirement: REQUIRED
        priority: 20
        autheticatorFlow: false
        authenticatorFlow: false
  - alias: "Handle Existing Account"
    description: "Handle what to do if there is existing account with same email/username like authenticated identity provider"
    providerId: basic-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticator: idp-confirm-link
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: REQUIRED
        priority: 20
        flowAlias: "Account verification options"
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: "Reset - Conditional OTP"
    description: "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force."
    providerId: basic-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticator: conditional-user-configured
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: reset-otp
        requirement: REQUIRED
        priority: 20
        autheticatorFlow: false
        authenticatorFlow: false
  - alias: "User creation or linking"
    description: "Flow for the existing/non-existing user alternatives"
    providerId: basic-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticatorConfig: "create unique user config"
        authenticator: idp-create-user-if-unique
        requirement: ALTERNATIVE
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: ALTERNATIVE
        priority: 20
        flowAlias: "Handle Existing Account"
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: "Verify Existing Account by Re-authentication"
    description: "Reauthentication of existing account"
    providerId: basic-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticator: idp-username-password-form
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: CONDITIONAL
        priority: 20
        flowAlias: "First broker login - Conditional OTP"
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: browser
    description: "browser based authentication"
    providerId: basic-flow
    topLevel: true
    builtIn: true
    authenticationExecutions:
      - authenticator: auth-cookie
        requirement: ALTERNATIVE
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: auth-spnego
        requirement: DISABLED
        priority: 20
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: identity-provider-redirector
        requirement: ALTERNATIVE
        priority: 25
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: ALTERNATIVE
        priority: 30
        flowAlias: forms
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: clients
    description: "Base authentication for clients"
    providerId: client-flow
    topLevel: true
    builtIn: true
    authenticationExecutions:
      - authenticator: client-secret
        requirement: ALTERNATIVE
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: client-jwt
        requirement: ALTERNATIVE
        priority: 20
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: client-secret-jwt
        requirement: ALTERNATIVE
        priority: 30
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: client-x509
        requirement: ALTERNATIVE
        priority: 40
        autheticatorFlow: false
        authenticatorFlow: false
  - alias: "direct grant"
    description: "OpenID Connect Resource Owner Grant"
    providerId: basic-flow
    topLevel: true
    builtIn: true
    authenticationExecutions:
      - authenticator: direct-grant-validate-username
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: direct-grant-validate-password
        requirement: REQUIRED
        priority: 20
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: CONDITIONAL
        priority: 30
        flowAlias: "Direct Grant - Conditional OTP"
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: "docker auth"
    description: "Used by Docker clients to authenticate against the IDP"
    providerId: basic-flow
    topLevel: true
    builtIn: true
    authenticationExecutions:
      - authenticator: docker-http-basic-authenticator
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
  - alias: "first broker login"
    description: "Actions taken after first broker login with identity provider account which is not yet linked to any Keycloak account"
    providerId: basic-flow
    topLevel: true
    builtIn: true
    authenticationExecutions:
      - authenticatorConfig: "review profile config"
        authenticator: idp-review-profile
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: REQUIRED
        priority: 20
        flowAlias: "User creation or linking"
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: forms
    description: "Username password otp and other auth forms."
    providerId: basic-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticator: auth-username-password-form
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: CONDITIONAL
        priority: 20
        flowAlias: "Browser - Conditional OTP"
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: "http challenge"
    description: "An authentication flow based on challenge-response HTTP Authentication Schemes"
    providerId: basic-flow
    topLevel: true
    builtIn: true
    authenticationExecutions:
      - authenticator: no-cookie-redirect
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: REQUIRED
        priority: 20
        flowAlias: "Authentication Options"
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: registration
    description: "registration flow"
    providerId: basic-flow
    topLevel: true
    builtIn: true
    authenticationExecutions:
      - authenticator: registration-page-form
        requirement: REQUIRED
        priority: 10
        flowAlias: "registration form"
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: "registration form"
    description: "registration form"
    providerId: form-flow
    topLevel: false
    builtIn: true
    authenticationExecutions:
      - authenticator: registration-user-creation
        requirement: REQUIRED
        priority: 20
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: registration-password-action
        requirement: REQUIRED
        priority: 50
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: registration-recaptcha-action
        requirement: DISABLED
        priority: 60
        autheticatorFlow: false
        authenticatorFlow: false
  - alias: "reset credentials"
    description: "Reset credentials for a user if they forgot their password or something"
    providerId: basic-flow
    topLevel: true
    builtIn: true
    authenticationExecutions:
      - authenticator: reset-credentials-choose-user
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: reset-credential-email
        requirement: REQUIRED
        priority: 20
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: reset-password
        requirement: REQUIRED
        priority: 30
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: CONDITIONAL
        priority: 40
        flowAlias: "Reset - Conditional OTP"
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: "saml ecp"
    description: "SAML ECP Profile Authentication Flow"
    providerId: basic-flow
    topLevel: true
    builtIn: true
    authenticationExecutions:
      - authenticator: http-basic-authenticator
        requirement: REQUIRED
        priority: 10
        autheticatorFlow: false
        authenticatorFlow: false
  - alias: example-forms
    description: "Username password otp and other auth forms."
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticatorConfig: "ipcheck"
        authenticator: auth-username-password-form-ip-check
        requirement: REQUIRED
        priority: 0
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: CONDITIONAL
        priority: 1
        flowAlias: example-browser-conditional-otp
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: example-browser
    description: "browser based authentication"
    providerId: basic-flow
    topLevel: true
    builtIn: false
    authenticationExecutions:
      - authenticator: auth-cookie
        requirement: ALTERNATIVE
        priority: 0
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: auth-spnego
        requirement: DISABLED
        priority: 1
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: identity-provider-redirector
        requirement: ALTERNATIVE
        priority: 2
        autheticatorFlow: false
        authenticatorFlow: false
      - requirement: ALTERNATIVE
        priority: 3
        flowAlias: example-forms
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: example-browser-conditional-otp
    description: "Flow to determine if the OTP is required for the authentication"
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: conditional-user-configured
        requirement: REQUIRED
        priority: 0
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: auth-otp-form
        requirement: REQUIRED
        priority: 1
        autheticatorFlow: false
        authenticatorFlow: false
  - alias: example-direct-access
    description: "OpenID Connect Resource Owner Grant"
    providerId: basic-flow
    topLevel: true
    builtIn: false
    authenticationExecutions:
      - authenticator: direct-grant-validate-username
        requirement: REQUIRED
        priority: 0
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: direct-grant-validate-password
        requirement: REQUIRED
        priority: 1
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: custom-auth
        requirement: REQUIRED
        priority: 2
        autheticatorFlow: false
        authenticatorFlow: false
        authenticatorConfig: "Custom Auth"
      - requirement: CONDITIONAL
        priority: 3
        flowAlias: example-direct-access-conditional-otp
        autheticatorFlow: true
        authenticatorFlow: true
  - alias: example-direct-access-conditional-otp
    description: "Flow to determine if the OTP is required for the authentication"
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: conditional-user-configured
        requirement: REQUIRED
        priority: 0
        autheticatorFlow: false
        authenticatorFlow: false
      - authenticator: direct-grant-validate-otp
        requirement: REQUIRED
        priority: 1
        autheticatorFlow: false
        authenticatorFlow: false
authenticatorConfig:
  - alias: "create unique user config"
    config:
      require.password.update.after.registration: "false"
  - alias: "review profile config"
    config:
      update.profile.on.first.login: missing
  - alias: "Custom Auth"
    config:
      allow.cidr: 127.0.0.1/32
      user.federation.name: NONE
  - alias: "ipcheck"
    config:
      allow.cidr: 127.0.0.1/32
      user.federation.name: AD-ignored
requiredActions:
  - alias: CONFIGURE_TOTP
    name: "Configure OTP"
    providerId: CONFIGURE_TOTP
    enabled: true
    defaultAction: false
    priority: 10
    config: {}
  - alias: TERMS_AND_CONDITIONS
    name: "Terms and Conditions"
    providerId: TERMS_AND_CONDITIONS
    enabled: false
    defaultAction: false
    priority: 20
    config: {}
  - alias: UPDATE_PASSWORD
    name: "Update Password"
    providerId: UPDATE_PASSWORD
    enabled: true
    defaultAction: false
    priority: 30
    config: {}
  - alias: UPDATE_PROFILE
    name: "Update Profile"
    providerId: UPDATE_PROFILE
    enabled: true
    defaultAction: false
    priority: 40
    config: {}
  - alias: VERIFY_EMAIL
    name: "Verify Email"
    providerId: VERIFY_EMAIL
    enabled: true
    defaultAction: false
    priority: 50
    config: {}
identityProviders:
  - alias: saml
    providerId: saml
    enabled: true
    updateProfileFirstLoginMode: "on"
    trustEmail: true
    storeToken: true
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    firstBrokerLoginFlowAlias: first broker login
    config:
      hideOnLoginPage: ""
      validateSignature: "false"
      samlXmlKeyNameTranformer: KEY_ID
      signingCertificate: |-
        MIIDETCCAfmgAwIBAgIUZRpDhkNKl5eWtJqk0Bu1BgTTargwDQYJKoZIhvcNAQEL
        BQAwFjEUMBIGA1UEAwwLc2FtbHRlc3QuaWQwHhcNMTgwODI0MjExNDEwWhcNMzgw
        ODI0MjExNDEwWjAWMRQwEgYDVQQDDAtzYW1sdGVzdC5pZDCCASIwDQYJKoZIhvcN
        AQEBBQADggEPADCCAQoCggEBAJrh9/PcDsiv3UeL8Iv9rf4WfLPxuOm9W6aCntEA
        8l6c1LQ1Zyrz+Xa/40ZgP29ENf3oKKbPCzDcc6zooHMji2fBmgXp6Li3fQUzu7yd
        +nIC2teejijVtrNLjn1WUTwmqjLtuzrKC/ePoZyIRjpoUxyEMJopAd4dJmAcCq/K
        k2eYX9GYRlqvIjLFoGNgy2R4dWwAKwljyh6pdnPUgyO/WjRDrqUBRFrLQJorR2kD
        c4seZUbmpZZfp4MjmWMDgyGM1ZnR0XvNLtYeWAyt0KkSvFoOMjZUeVK/4xR74F8e
        8ToPqLmZEg9ZUx+4z2KjVK00LpdRkH9Uxhh03RQ0FabHW6UCAwEAAaNXMFUwHQYD
        VR0OBBYEFJDbe6uSmYQScxpVJhmt7PsCG4IeMDQGA1UdEQQtMCuCC3NhbWx0ZXN0
        LmlkhhxodHRwczovL3NhbWx0ZXN0LmlkL3NhbWwvaWRwMA0GCSqGSIb3DQEBCwUA
        A4IBAQBNcF3zkw/g51q26uxgyuy4gQwnSr01Mhvix3Dj/Gak4tc4XwvxUdLQq+jC
        cxr2Pie96klWhY/v/JiHDU2FJo9/VWxmc/YOk83whvNd7mWaNMUsX3xGv6AlZtCO
        L3JhCpHjiN+kBcMgS5jrtGgV1Lz3/1zpGxykdvS0B4sPnFOcaCwHe2B9SOCWbDAN
        JXpTjz1DmJO4ImyWPJpN1xsYKtm67Pefxmn0ax0uE2uuzq25h0xbTkqIQgJzyoE/
        DPkBFK1vDkMfAW11dQ0BXatEnW7Gtkc0lh2/PIbHWj4AzxYMyBf5Gy6HSVOftwjC
        voQR2qr2xJBixsg+MIORKtmKHLfU,MIIDEjCCAfqgAwIBAgIVAMECQ1tjghafm5OxWDh9hwZfxthWMA0GCSqGSIb3DQEB
        CwUAMBYxFDASBgNVBAMMC3NhbWx0ZXN0LmlkMB4XDTE4MDgyNDIxMTQwOVoXDTM4
        MDgyNDIxMTQwOVowFjEUMBIGA1UEAwwLc2FtbHRlc3QuaWQwggEiMA0GCSqGSIb3
        DQEBAQUAA4IBDwAwggEKAoIBAQC0Z4QX1NFKs71ufbQwoQoW7qkNAJRIANGA4iM0
        ThYghul3pC+FwrGv37aTxWXfA1UG9njKbbDreiDAZKngCgyjxj0uJ4lArgkr4AOE
        jj5zXA81uGHARfUBctvQcsZpBIxDOvUUImAl+3NqLgMGF2fktxMG7kX3GEVNc1kl
        bN3dfYsaw5dUrw25DheL9np7G/+28GwHPvLb4aptOiONbCaVvh9UMHEA9F7c0zfF
        /cL5fOpdVa54wTI0u12CsFKt78h6lEGG5jUs/qX9clZncJM7EFkN3imPPy+0HC8n
        spXiH/MZW8o2cqWRkrw3MzBZW3Ojk5nQj40V6NUbjb7kfejzAgMBAAGjVzBVMB0G
        A1UdDgQWBBQT6Y9J3Tw/hOGc8PNV7JEE4k2ZNTA0BgNVHREELTArggtzYW1sdGVz
        dC5pZIYcaHR0cHM6Ly9zYW1sdGVzdC5pZC9zYW1sL2lkcDANBgkqhkiG9w0BAQsF
        AAOCAQEASk3guKfTkVhEaIVvxEPNR2w3vWt3fwmwJCccW98XXLWgNbu3YaMb2RSn
        7Th4p3h+mfyk2don6au7Uyzc1Jd39RNv80TG5iQoxfCgphy1FYmmdaSfO8wvDtHT
        TNiLArAxOYtzfYbzb5QrNNH/gQEN8RJaEf/g/1GTw9x/103dSMK0RXtl+fRs2nbl
        D1JJKSQ3AdhxK/weP3aUPtLxVVJ9wMOQOfcy02l+hHMb6uAjsPOpOVKqi3M8XmcU
        ZOpx4swtgGdeoSpeRyrtMvRwdcciNBp9UZome44qZAYH1iqrpmmjsfI9pJItsgWu
        3kXPjhSfj1AJGR1l9JGvJrHki1iHTA==
      postBindingLogout: "true"
      nameIDPolicyFormat: urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
      postBindingResponse: "true"
      singleLogoutServiceUrl: https://samltest.id/idp/profile/SAML2/POST/SLO
      backchannelSupported: ""
      signatureAlgorithm: RSA_SHA256
      wantAssertionsEncrypted: ""
      useJwksUrl: "true"
      wantAssertionsSigned: ""
      postBindingAuthnRequest: "true"
      forceAuthn: ""
      singleSignOnServiceUrl: https://samltest.id/idp/profile/SAML2/POST/SSO
      wantAuthnRequestsSigned: "false"
      allowedClockSkew: ""
      addExtensionsElementWithKeyInfo: "false"
      encryptionPublicKey: |-
        MIIDEjCCAfqgAwIBAgIVAPVbodo8Su7/BaHXUHykx0Pi5CFaMA0GCSqGSIb3DQEB
        CwUAMBYxFDASBgNVBAMMC3NhbWx0ZXN0LmlkMB4XDTE4MDgyNDIxMTQwOVoXDTM4
        MDgyNDIxMTQwOVowFjEUMBIGA1UEAwwLc2FtbHRlc3QuaWQwggEiMA0GCSqGSIb3
        DQEBAQUAA4IBDwAwggEKAoIBAQCQb+1a7uDdTTBBFfwOUun3IQ9nEuKM98SmJDWa
        MwM877elswKUTIBVh5gB2RIXAPZt7J/KGqypmgw9UNXFnoslpeZbA9fcAqqu28Z4
        sSb2YSajV1ZgEYPUKvXwQEmLWN6aDhkn8HnEZNrmeXihTFdyr7wjsLj0JpQ+VUlc
        4/J+hNuU7rGYZ1rKY8AA34qDVd4DiJ+DXW2PESfOu8lJSOteEaNtbmnvH8KlwkDs
        1NvPTsI0W/m4SK0UdXo6LLaV8saIpJfnkVC/FwpBolBrRC/Em64UlBsRZm2T89ca
        uzDee2yPUvbBd5kLErw+sC7i4xXa2rGmsQLYcBPhsRwnmBmlAgMBAAGjVzBVMB0G
        A1UdDgQWBBRZ3exEu6rCwRe5C7f5QrPcAKRPUjA0BgNVHREELTArggtzYW1sdGVz
        dC5pZIYcaHR0cHM6Ly9zYW1sdGVzdC5pZC9zYW1sL2lkcDANBgkqhkiG9w0BAQsF
        AAOCAQEABZDFRNtcbvIRmblnZItoWCFhVUlq81ceSQddLYs8DqK340//hWNAbYdj
        WcP85HhIZnrw6NGCO4bUipxZXhiqTA/A9d1BUll0vYB8qckYDEdPDduYCOYemKkD
        dmnHMQWs9Y6zWiYuNKEJ9mf3+1N8knN/PK0TYVjVjXAf2CnOETDbLtlj6Nqb8La3
        sQkYmU+aUdopbjd5JFFwbZRaj6KiHXHtnIRgu8sUXNPrgipUgZUOVhP0C0N5OfE4
        JW8ZBrKgQC/6vJ2rSa9TlzI6JAa5Ww7gMXMP9M+cJUNQklcq+SBnTK8G+uBHgPKR
        zBDsMIEzRtQZm4GIoHJae4zmnCekkQ==
      principalType: SUBJECT
  - alias: twitter
    providerId: twitter
    enabled: true
    updateProfileFirstLogin: "true"
    storeToken: "true"
    addReadTokenRoleOnCreate: true
    config:
      clientId: CHANGE_CLIENT_ID
      clientSecret: CHANGE_CLIENT_SECRET
  - providerId: google
    alias: google
    enabled: true
    config:
      syncMode: IMPORT
      clientId: googleId
      clientSecret: googleSecret
groups:
  - name: group1
    attributes:
      example:
        - attribute
    realmRoles:
      - role1
    subGroups:
      - name: sub-group1
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client1: ["client1-role"]
  - name: group2
    attributes:
      example:
        - attribute
    realmRoles:
      - role2
    subGroups:
      - name: sub-group2
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client2: ["client2-role"]
  - name: group3
    attributes:
      example:
        - attribute
    realmRoles:
      - role3
    subGroups:
      - name: sub-group3
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client3: ["client3-role"]
  - name: group4
    attributes:
      example:
        - attribute
    realmRoles:
      - role4
    subGroups:
      - name: sub-group4
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client4: ["client4-role"]
  - name: group5
    attributes:
      example:
        - attribute
    realmRoles:
      - role5
    subGroups:
      - name: sub-group5
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client5: ["client5-role"]
  - name: group6
    attributes:
      example:
        - attribute
    realmRoles:
      - role6
    subGroups:
      - name: sub-group6
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client6: ["client6-role"]
  - name: group7
    attributes:
      example:
        - attribute
    realmRoles:
      - role7
    subGroups:
      - name: sub-group7
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client7: ["client7-role"]
  - name: group8
    attributes:
      example:
        - attribute
    realmRoles:
      - role8
    subGroups:
      - name: sub-group8
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client8: ["client8-role"]
  - name: group9
    attributes:
      example:
        - attribute
    realmRoles:
      - role9
    subGroups:
      - name: sub-group9
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client9: ["client9-role"]
  - name: group10
    attributes:
      example:
        - attribute
    realmRoles:
      - role10
    subGroups:
      - name: sub-group10
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client10: ["client10-role"]
  - name: group11
    attributes:
      example:
        - attribute
    realmRoles:
      - role11
    subGroups:
      - name: sub-group11
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client11: ["client11-role"]
  - name: group12
    attributes:
      example:
        - attribute
    realmRoles:
      - role12
    subGroups:
      - name: sub-group12
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client12: ["client12-role"]
  - name: group13
    attributes:
      example:
        - attribute
    realmRoles:
      - role13
    subGroups:
      - name: sub-group13
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client13: ["client13-role"]
  - name: group14
    attributes:
      example:
        - attribute
    realmRoles:
      - role14
    subGroups:
      - name: sub-group14
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client14: ["client14-role"]
  - name: group15
    attributes:
      example:
        - attribute
    realmRoles:
      - role15
    subGroups:
      - name: sub-group15
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client15: ["client15-role"]
  - name: group16
    attributes:
      example:
        - attribute
    realmRoles:
      - role16
    subGroups:
      - name: sub-group16
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client16: ["client16-role"]
  - name: group17
    attributes:
      example:
        - attribute
    realmRoles:
      - role17
    subGroups:
      - name: sub-group17
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client17: ["client17-role"]
  - name: group18
    attributes:
      example:
        - attribute
    realmRoles:
      - role18
    subGroups:
      - name: sub-group18
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client18: ["client18-role"]
  - name: group19
    attributes:
      example:
        - attribute
    realmRoles:
      - role19
    subGroups:
      - name: sub-group19
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client19: ["client19-role"]
  - name: group20
    attributes:
      example:
        - attribute
    realmRoles:
      - role20
    subGroups:
      - name: sub-group20
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client20: ["client20-role"]
  - name: group21
    attributes:
      example:
        - attribute
    realmRoles:
      - role21
    subGroups:
      - name: sub-group21
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client21: ["client21-role"]
  - name: group22
    attributes:
      example:
        - attribute
    realmRoles:
      - role22
    subGroups:
      - name: sub-group22
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client22: ["client22-role"]
  - name: group23
    attributes:
      example:
        - attribute
    realmRoles:
      - role23
    subGroups:
      - name: sub-group23
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client23: ["client23-role"]
  - name: group24
    attributes:
      example:
        - attribute
    realmRoles:
      - role24
    subGroups:
      - name: sub-group24
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client24: ["client24-role"]
  - name: group25
    attributes:
      example:
        - attribute
    realmRoles:
      - role25
    subGroups:
      - name: sub-group25
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client25: ["client25-role"]
  - name: group26
    attributes:
      example:
        - attribute
    realmRoles:
      - role26
    subGroups:
      - name: sub-group26
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client26: ["client26-role"]
  - name: group27
    attributes:
      example:
        - attribute
    realmRoles:
      - role27
    subGroups:
      - name: sub-group27
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client27: ["client27-role"]
  - name: group28
    attributes:
      example:
        - attribute
    realmRoles:
      - role28
    subGroups:
      - name: sub-group28
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client28: ["client28-role"]
  - name: group29
    attributes:
      example:
        - attribute
    realmRoles:
      - role29
    subGroups:
      - name: sub-group29
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client29: ["client29-role"]
  - name: group30
    attributes:
      example:
        - attribute
    realmRoles:
      - role30
    subGroups:
      - name: sub-group30
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client30: ["client30-role"]
  - name: group31
    attributes:
      example:
        - attribute
    realmRoles:
      - role31
    subGroups:
      - name: sub-group31
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client31: ["client31-role"]
  - name: group32
    attributes:
      example:
        - attribute
    realmRoles:
      - role32
    subGroups:
      - name: sub-group32
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client32: ["client32-role"]
  - name: group33
    attributes:
      example:
        - attribute
    realmRoles:
      - role33
    subGroups:
      - name: sub-group33
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client33: ["client33-role"]
  - name: group34
    attributes:
      example:
        - attribute
    realmRoles:
      - role34
    subGroups:
      - name: sub-group34
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client34: ["client34-role"]
  - name: group35
    attributes:
      example:
        - attribute
    realmRoles:
      - role35
    subGroups:
      - name: sub-group35
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client35: ["client35-role"]
  - name: group36
    attributes:
      example:
        - attribute
    realmRoles:
      - role36
    subGroups:
      - name: sub-group36
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client36: ["client36-role"]
  - name: group37
    attributes:
      example:
        - attribute
    realmRoles:
      - role37
    subGroups:
      - name: sub-group37
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client37: ["client37-role"]
  - name: group38
    attributes:
      example:
        - attribute
    realmRoles:
      - role38
    subGroups:
      - name: sub-group38
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client38: ["client38-role"]
  - name: group39
    attributes:
      example:
        - attribute
    realmRoles:
      - role39
    subGroups:
      - name: sub-group39
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client39: ["client39-role"]
  - name: group40
    attributes:
      example:
        - attribute
    realmRoles:
      - role40
    subGroups:
      - name: sub-group40
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client40: ["client40-role"]
  - name: group41
    attributes:
      example:
        - attribute
    realmRoles:
      - role41
    subGroups:
      - name: sub-group41
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client41: ["client41-role"]
  - name: group42
    attributes:
      example:
        - attribute
    realmRoles:
      - role42
    subGroups:
      - name: sub-group42
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client42: ["client42-role"]
  - name: group43
    attributes:
      example:
        - attribute
    realmRoles:
      - role43
    subGroups:
      - name: sub-group43
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client43: ["client43-role"]
  - name: group44
    attributes:
      example:
        - attribute
    realmRoles:
      - role44
    subGroups:
      - name: sub-group44
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client44: ["client44-role"]
  - name: group45
    attributes:
      example:
        - attribute
    realmRoles:
      - role45
    subGroups:
      - name: sub-group45
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client45: ["client45-role"]
  - name: group46
    attributes:
      example:
        - attribute
    realmRoles:
      - role46
    subGroups:
      - name: sub-group46
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client46: ["client46-role"]
  - name: group47
    attributes:
      example:
        - attribute
    realmRoles:
      - role47
    subGroups:
      - name: sub-group47
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client47: ["client47-role"]
  - name: group48
    attributes:
      example:
        - attribute
    realmRoles:
      - role48
    subGroups:
      - name: sub-group48
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client48: ["client48-role"]
  - name: group49
    attributes:
      example:
        - attribute
    realmRoles:
      - role49
    subGroups:
      - name: sub-group49
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client49: ["client49-role"]
  - name: group50
    attributes:
      example:
        - attribute
    realmRoles:
      - role50
    subGroups:
      - name: sub-group50
        attributes:
          sub-example:
            - attribute
        clientRoles:
          client50: ["client50-role"]
