{
  "id": "master",
  "realm": "master",
  "displayName": "Keycloak",
  "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 60,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 600,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "a362cd79-9e76-4401-a626-bcbf2dd82d53",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "master",
        "attributes": {}
      },
      {
        "id": "96ef49fb-7961-4b7a-a459-c207179b4930",
        "name": "create-realm",
        "description": "${role_create-realm}",
        "composite": false,
        "clientRole": false,
        "containerId": "master",
        "attributes": {}
      },
      {
        "id": "ad16d4a4-ae07-40ec-ac30-8fc972208123",
        "name": "admin",
        "description": "${role_admin}",
        "composite": true,
        "composites": {
          "realm": [
            "create-realm"
          ],
          "client": {
            "master-realm": [
              "view-authorization",
              "query-realms",
              "view-events",
              "manage-events",
              "query-users",
              "manage-clients",
              "manage-users",
              "view-users",
              "view-realm",
              "impersonation",
              "view-clients",
              "query-groups",
              "view-identity-providers",
              "query-clients",
              "manage-identity-providers",
              "create-client",
              "manage-realm",
              "manage-authorization"
            ]
          }
        },
        "clientRole": false,
        "containerId": "master",
        "attributes": {}
      },
      {
        "id": "f20c8518-fd56-4e4e-983a-f86c23447c2d",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "master",
        "attributes": {}
      },
      {
        "id": "1c162e65-0826-43e1-8696-4925d8bd133c",
        "name": "default-roles-master",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "master",
        "attributes": {}
      }
    ],
    "client": {
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "ee9b2e88-a164-4e24-8ae6-e5cac030d8a5",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "90e15a69-b58a-4975-b2e2-60a896fa738b",
          "attributes": {}
        }
      ],
      "master-realm": [
        {
          "id": "f0fc8b9c-b891-42b3-9b65-b6dc27dedfaf",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "e5ce7ff6-a3cc-44a6-b986-00499b110d5e",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "5a244755-0ab8-4872-b50b-79c1559c13b2",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "c247679b-10cf-4e96-b85e-76376d998dae",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "f354024e-cbcf-4214-8034-fba8e62cd0f0",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "383b81b9-166b-4460-9c3f-cec4bb160d47",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "5b4d4962-59df-41e1-afd9-69280be438ae",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "b4a787f0-81e5-4647-a3b8-bd515b5d1d06",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "master-realm": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "f00fd557-05a2-461a-b332-69185b7be43b",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "190a82f2-f18d-4522-aac1-0af1696a1209",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "84a24bc3-443d-4048-b82a-676cbec8eaed",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "master-realm": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "e141f1e3-8a26-4328-9fe7-09e3fe469432",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "5dc25793-effd-4709-ad06-c4031309692a",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "a442eef4-0b41-4912-a92a-6815668bf80e",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "88b9784b-0148-46fa-a582-7924626af729",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "1005dd78-4105-4651-b98b-611e537f2a70",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "b1e5a696-23ad-4044-b108-9f08044eab3f",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        },
        {
          "id": "0bd5b8d6-a96b-41f0-9f76-379afd45a8a8",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "b159b500-9c57-428d-a935-cb9d11166d36",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "05e2d8f9-7b71-40be-b16d-c29b2bc69cb3",
          "attributes": {}
        },
        {
          "id": "d4e46ea5-7217-4a2f-b49c-e4d0415ee2a7",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "05e2d8f9-7b71-40be-b16d-c29b2bc69cb3",
          "attributes": {}
        },
        {
          "id": "e53b4ac6-ea5c-4700-b278-89afb4c5723e",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "05e2d8f9-7b71-40be-b16d-c29b2bc69cb3",
          "attributes": {}
        },
        {
          "id": "ea9bdb89-8cb1-4fd5-903f-f9b332ea78b3",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "05e2d8f9-7b71-40be-b16d-c29b2bc69cb3",
          "attributes": {}
        },
        {
          "id": "34420a60-74f6-40af-8971-63ad275d8d13",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "05e2d8f9-7b71-40be-b16d-c29b2bc69cb3",
          "attributes": {}
        },
        {
          "id": "b4c88932-4c37-44b2-a098-4eff5d8c03b5",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "05e2d8f9-7b71-40be-b16d-c29b2bc69cb3",
          "attributes": {}
        },
        {
          "id": "e8f95b1b-14ad-4673-9711-5ffc75762d8e",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "05e2d8f9-7b71-40be-b16d-c29b2bc69cb3",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "1c162e65-0826-43e1-8696-4925d8bd133c",
    "name": "default-roles-master",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "master"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "8a4a0cb5-9631-4fb4-b33b-f48376a538c0",
      "createdTimestamp": 1648140429999,
      "username": "admin",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "credentials": [
        {
          "id": "dc4433c3-bedb-41dc-b653-5f85d2d7ea79",
          "type": "password",
          "createdDate": 1648140430057,
          "secretData": "{\"value\":\"Wks0i8IfIg/L7JatKiDacOo5dm/Cx7/cs0WX1r5HkZqlP9i6w/DqcDKjB2qOXBb8TH/Hz5XtJxl9e/fPJ0RHaQ==\",\"salt\":\"0ykD07V0plYT/cCYoZk9Fw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "admin",
        "default-roles-master"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "05e2d8f9-7b71-40be-b16d-c29b2bc69cb3",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/master/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/master/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7fcebc53-ba72-45a9-9ee7-88977ac3b89f",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/master/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/master/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "db8d36c9-d40e-48d1-90c8-15563ff21fdd",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0a5cfe9e-8bd0-4daa-8d48-8e904c292f86",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "90e15a69-b58a-4975-b2e2-60a896fa738b",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b8d95c50-c3c0-4772-ad23-9ecad4378f74",
      "clientId": "master-realm",
      "name": "master Realm",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "60249239-a0d6-41b5-a498-75526db5e67b",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/master/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/master/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "f602a253-4630-4259-9b53-a74e4ac08d07",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "e7d7a2b5-7cd2-4908-afad-1bed9e2e9881",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "8f7ecf97-50c4-46f8-9818-62aba16a6aea",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "d8d6a94b-7716-4f6c-a763-a8c5a5080813",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "5ce10ad6-8dac-400d-8811-c0312265833e",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "36abf517-42ff-44f8-9492-4f8573d1c5db",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b9fe3b11-af8a-4658-a625-0f7af9881d55",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "cfd2b8e6-babc-4e8d-a73f-43fa83f3056f",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "ff31c19e-239a-458a-8683-366b11a340de",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "add9859d-3de1-46d8-8e93-92929051ca86",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "b83743f0-29da-4417-89ff-70f8a9036458",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "8aed742c-9bf0-4d02-9f95-79d2322813b9",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "acac558e-041f-41b1-89af-9c3a5a5eb896",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "11aeed82-7af2-4867-8581-2a6ed4f8aeaa",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "73ec8866-0395-4c2e-8c82-a1b9b7fe07e9",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "a6d0d9ef-299b-4f50-998e-ab356564ce10",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "b7a6ac49-7f5f-4cc8-a2b1-f1ee26f02f9f",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "181077c2-27e1-45f9-a829-7d11efca5038",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "b1521157-177a-4035-a1b9-fde4ba5a1936",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fa467224-356d-48bf-aae7-92484ba1514a",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "10f7970b-eb09-4726-9f87-56b7f5cc1f1d",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ab49de5e-b530-4355-8dbe-27ca28bd9530",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "774c105a-34c8-4d81-aa7c-caa557f77f10",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cc7b2af8-eda4-452f-98a9-f658139ff337",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "30d15da3-69c5-4cb5-a47d-a5ab75004e0d",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5d6c33c9-934a-4523-aeb2-bd88a39eb145",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4f958d7c-79a9-43bc-8dda-07ba8085c9b7",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "06900a87-38ca-4f75-ba0c-4379e32fd825",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "20a6acaa-2e7d-4981-8b4f-d28808ad1ef1",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4f53fd6b-690e-4c42-a461-8a963582bcad",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "44272836-cfec-4e7f-8544-fed58569b626",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "312df67f-c3d5-4ed3-97fe-6102ab195e93",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "50c65687-f3a3-4b7e-a00a-20c48adf197c",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "9b9c4dc4-26f8-4743-9461-3936e7b5e578",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "e9d4520a-9834-481b-95a7-f5db855b24fc",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "69174bb9-7c74-43c1-890c-4f784c1e4aba",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "xXSSProtection": "1; mode=block",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "7616d337-a390-43fa-999d-74b0ca1f1abf",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "454d55d9-62bd-44df-b4aa-f62cd8730ab8",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "138fe165-1e57-4e53-a9a9-a811110e8ff9",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "99b09459-a418-4b0a-b097-5ec9ca967f92",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "5a1df210-26d5-474d-aade-c7966b519dc5",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "27814723-dd61-41b7-b386-8ca247c7fae6",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "8c0321ff-3f3e-4a21-9cd8-a8ba34b6b3c1",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "58200906-0adb-45f6-8b5b-0903b20dd206",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "fd78ef4d-f51a-4cd1-b08f-7bf5195aa074",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAj2I3OW0f1pcf/mu/Hyf05EE9FnNPmBVAQPXAcAvI+xYxoKtCbKAsBt/Uvw31UKt6Z2uXuO1LZqo2PCiiK4FKwJXVsSztXASXw2XwL+y5pABR/7q8BLyf1ihRqVG+1BFkOu7FXizO/66OT6/dqXOQm8nrtjS4B43vu+8JuSh5x791QGyASLuE89Kjb702ku7fERj16TJVGQNGQnWK3i01N0b2ponJ2sNgSgN7k6w+z8E3BAG7AgF52MxU8dyM5lPhmM9OvOv1E4s1+go9eNqfx1sBbmxTKyiClOL7W+Km16/EjSIb7UPDUfwvluk7n4lZWh5kC9mWiiISplZP9IU7owIDAQABAoIBAGlrFJ8sFBR52BP+s+38Opj3PiqbbRGrzin0hR/cClBQ6Pvv7k5fFP+Y4Zn2cT52VPBkspBMJvu8eVORrGnADW26u/ofxgO5fLs033rc2UAy3Bbg/AufgwS5cBDFAUB56O9LTeEHoMlrVUZRTu+e/9sKgjrcV9F2EaRjAwsXLzIj96gCDzzMCouKKka/T75DxxRRZdacOLy50RocOp64ToMzkYaDUkhvjezLGNzpR6ZRvdLq5B49il5/QAZ5uDZn9d/Jfa89XncH6WZ54augLl4Ir8wyKjS1ySkplaI7+JpZ+L91A5bb7LibaKtqZ9xZaaXV53WSUDCKlqQDoucz3sECgYEA9KyNW3PLbHvcKjcJ57yxFsqXwrwu8ftYiR9kXGdq2bRpzNEHmcEnASm7pjRTpwYhxkP4aJL0Q9OIUjwOgamve54WsDbZ/ZfmIVwh5SE5BAt19vXgYByPbEb8dUBsy+JlV4Yf9RcKL142V5sIUrwIk9P95be7AfNl2eHudk4uQ48CgYEAlgVY9q3GRoCbyDsoPmabmiiJegeOdn4YJ6xIieqQ+5qnqylte/3jfTIVkGOK5KLv4MPmhD3+VNtZL2+qF7t479IBhs2As38C4k0MTW6dr/moW2ogotDh8yjHtw0gyk48xAZh+z/6Du8Ywv5I8QN1hMtz8VNCjOxHzvC5lzOLLK0CgYEAgGbhlCHTmq3xn7Hcn+G1acmOFSMe29zU3Lk9uQSI3ZFBiLwV6gmkh4a4NIP3dorQRLU88txUFhg3zTg5QLClKBGRxI40nlIN8mngW9ewjT/ae20TgDzcw60JJhtWPTUli+YWdU/PB4bAq/7vQkPtmG7DKr/eAysRw2M++pUS0F8CgYATO6hGJ80tqLtQFlV4eoskXmIRpPpcspnCLFI4bDweJZutU+hXZxtNJ6igFELwQPtj43mgJpp+oohyjmxOEpjUliXf9GS1nmjuPlZ/btkEgItW/OomNYViOS4xh5tWlGUx9GeHYJJca8bO6O7NB1Z/qd25aKU1j+082JvSiKclGQKBgQDP0+rTxHgduEcqeBKsI8aL7C9B2ycy+OieFkDxr7BTkKLXJ5CAgq86OQWwYXBNOb2oCOuldQw61CvAJ/ifVvK2Vj90UkYhzMDumVMHjk3qnitDlaIxdjk1M2hsfs4W0BD2z5fovGblhMfcxQNTmNWQDs6c8jutFCDHDvSCIH269A=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICmzCCAYMCBgF/vNMoPDANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjIwMzI0MTY0NTI5WhcNMzIwMzI0MTY0NzA5WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCPYjc5bR/Wlx/+a78fJ/TkQT0Wc0+YFUBA9cBwC8j7FjGgq0JsoCwG39S/DfVQq3pna5e47UtmqjY8KKIrgUrAldWxLO1cBJfDZfAv7LmkAFH/urwEvJ/WKFGpUb7UEWQ67sVeLM7/ro5Pr92pc5Cbyeu2NLgHje+77wm5KHnHv3VAbIBIu4Tz0qNvvTaS7t8RGPXpMlUZA0ZCdYreLTU3Rvamicnaw2BKA3uTrD7PwTcEAbsCAXnYzFTx3IzmU+GYz0686/UTizX6Cj142p/HWwFubFMrKIKU4vtb4qbXr8SNIhvtQ8NR/C+W6TufiVlaHmQL2ZaKIhKmVk/0hTujAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAFsKGczvNDR5VIk4rwfqZCfcE/W79L9z4ZGhIwg9xzkVSQ+FJ99phx+UhSvjBUUg4L63Hirvl55SMrg0zDLyOpMA39Jy5EcJ4bfclMOqSSqoQMGelAiE+/0/2NaUqdswX2Z0yZ+AUjXCXO+2eyPv1t8bhh78oe1JWsl7flNaWfMj66xA7xIs/zkMdqJmqPFAeIe34zMwtlyqtHHIB5oQ23S9Z3ZlQfKdOqJs7kxfNb/i/pHSqgen2DGr5CXW66pcEmsVrWhiYkdi2J/cM5FFOkfCCJQRz/+tvbB5cvFCBvzd/gfUW9z33OwkVNb8yYs9Ooyg/sTQqezwgRvkL2S9vK8="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "bb205483-c2a5-4e19-a3e9-1a979789cc3a",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "9df8b20f-e42e-4a48-bfb9-d754a91f759a"
          ],
          "secret": [
            "pVw0yc3D_jev7KihhOEJJw"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "bc9365bd-3b34-4007-a9a0-e4328d3e1ef7",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpQIBAAKCAQEApZcslAn7wXiwsuwbWxUdlHQ5e3KOQl6BK8+FfxHosFVF4wYVNfO6MSMdLTRYuo3Bjz8/mhpMf6HnyzKeRsD3sYpryL0CUMvQUF/zr6MyHKdmVQRa2lJ8/qDTR3uBy2WO4lbl1/+fMw1SqY0PWFfBJd1OTFURgRnO34K2ZbSHX13xub6WaCuijZltQLjhNkw9VkNmZE3yBAAwWwXYf73wPvYUYmRl+ABNREwzy2CFYly5l/Nvl3n6jAccseoOuxMsP6sQKFVyn6+FPnyx5kicHwpCEyjLBgLHZENgfyKt3plai3WBjXPSVcXNU0vrGa4CNrk0egfM+t8qeV8pSw3azQIDAQABAoIBAQCA1HjORGYmQ+vViHRQDMGSuknujVW4tSXyG+ZU0m4ionVZB2aBLzpw+Ey+2rcdjSRGeoLVNhjGRAS+xob1rTQIYRUyfDrM+YT8w2on/+QA/wxSoKy+puawhBdcye5VfJIJ7mmr/yiw43CokSKbLMsM1n0QTi7sLlQQ+PVHc4jO3FaYIbdr+SV5kA3/WJ1YAcodaA+Jn0Gzb4+gnNapmMosDWjDxJ0Jx4vkkYfLV3vksWBTtqm52JEmNs2UjwAyrlj5eA5jOoGerBhVxdFptZ6ydkQBSX4Qe0DffSGQOrcfFSv4EzMpvwhCnyR/137/TqYyRiFKEu0PWMXwZsTXkBvRAoGBAPaTU8vqH5bBgbh2UhhdrsHeM523h2C77bfxNXW2bAiOT8Ojb/bdWWWLCZ6W25ASPvN5tT/qb5ZVdNf8vSMUoOrUpijmTFtIvHg/oNtD4T33n0ahRlCoSyB2Q3mdgk/MqcIYRAWUKLOQl76UpH8Er3d/mlxM1ZSHvcW/yPBrbrcjAoGBAKvrbm2jszso6MYqYsjX0PHc/RoQQOrhCgpGxD09H0bMtTusOvtpwbANdiy1Rq8pXpjiqUhQvzmpv54AKb5argt5wUi5oFAmI4QzJPxApNH5HxNYl6vmvPehT+NHllRCrSABSSqIJ2wfS8j7H9i85rxbMr/BIKwTvw9TUd94wD1PAoGBALQngmMLZRcVvPyUXnj1Abkd6yKBtETGKfJqJwAhT5+Ussyi/iwlH6rkQhv/5t3Fpv7nXrkbRXpWZ69jNqGJ8eSBiAF7+i/73dAR1So+1zQaVuIY9TH7NCC8p6IUpeA+DY4FgrV8wZwoueYB3on7V2R888AaVzZVUx9Hd73JELR3AoGABF7Nxde9fKmDkVYOgNCLrTpS7NCw9ceWu8AkyPG+08vsZ4HvVejQVath760ECPviPby1VPNIiSy5hEi4xvADMKN9uF2Pp7nweTHbpNX32qaclZ9Q67vH3fupzjtJpQa04/VkaMJhTixVftxzaM0UiIFA/wLn07gEyVzy3d1x9Z0CgYEAziZetOcgH2PYQvMMHBhdm37Pew6OM4syLeTRQFdaBNDk/QykZfcAyWtSQxZZrR4bZR2u5gnEGD62KTbeaXexN6kmn0zPex4kqybZYRYdS60bGjUVjUnb/4jOPQJnKdTie8wGT3hNXxXlgEtQHyqme7kqa8wfQy7pDjh1+OmHTi8="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICmzCCAYMCBgF/vNMo3zANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjIwMzI0MTY0NTI5WhcNMzIwMzI0MTY0NzA5WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCllyyUCfvBeLCy7BtbFR2UdDl7co5CXoErz4V/EeiwVUXjBhU187oxIx0tNFi6jcGPPz+aGkx/oefLMp5GwPeximvIvQJQy9BQX/OvozIcp2ZVBFraUnz+oNNHe4HLZY7iVuXX/58zDVKpjQ9YV8El3U5MVRGBGc7fgrZltIdfXfG5vpZoK6KNmW1AuOE2TD1WQ2ZkTfIEADBbBdh/vfA+9hRiZGX4AE1ETDPLYIViXLmX82+XefqMBxyx6g67Eyw/qxAoVXKfr4U+fLHmSJwfCkITKMsGAsdkQ2B/Iq3emVqLdYGNc9JVxc1TS+sZrgI2uTR6B8z63yp5XylLDdrNAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAAy6Esqqy3fVSk+/89TA5de01N/kaBSl74sYMroW2YgPx8LH4XrICrwnvilAEXgIhWxHuwgkS0OZeTrqeNg39sCOsuPX78y61QxeUtaOZUwNsgy+Dneqyg0PVx56xI1OzAkOziAwT1jaAe5D0GgEEU1abv8GqpCarZ21ehB3KD/UzxMcC658R1OeZO63DkIoNvcmJFlf6vPkDRvuBfiiqUGeLUrl1Hh6CiB6vt9tPp/nbHF3lxfMqNEvdMQHp70AexLGTYWIWLkzgXJbvx6hOJHz2uWaLddbdSJh6f4y2+SPrbnD/8R3C1qTRvaoYqp+RQqHbDrBqEQS3X5W4DgtA2Q="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "072c8e13-48c0-4eb1-b904-0adbf6b9717e",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "a1093b0d-5fe7-48ba-a187-64ddda4106c9"
          ],
          "secret": [
            "6MiC14tHjuY2l_sZFVTHIR64uSWAMogGbEO_ewZ8ODXN3a8JeeFlmO0NkHuyfth55QFA5LrBBYAnAgis7C3OAA"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "1dc3891b-d9bf-4dad-adfd-dc6cfcf0d088",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d484c771-b60e-488d-87f6-178b5e9a8b26",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "80bcf1cd-9527-4ced-9666-c1e30ae71a51",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b65159ad-1898-4d55-87a4-03e57bf77a03",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cdbcfd16-6508-45c4-9bbb-afb2a2d08366",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0cd095e9-eb22-4164-8d8d-6e8e41010266",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "31109bed-7e27-4d4d-bc56-e17e44cefc24",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ba4fabb3-e4c6-47c8-8145-715ad17a427d",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "daf6898d-9acb-4f84-8afa-d3e1754c95ab",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6f231e93-c2db-4cd2-8bbf-0fac7622e14b",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7753a8a7-6ae1-40ba-935b-8e6a018ee40a",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d3446fa8-664d-42bc-b295-4f7ac68f04b7",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "addef1e7-ed45-4d7f-b085-600d63ac846f",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6e73a454-8487-4096-b1ad-2e140042cd4b",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "181879ce-9808-402e-b161-81265e37de09",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c8aa81ad-1631-4c12-8ae0-aea47ce40a65",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "712bddf5-2188-4f4a-9f00-ecdfe48aedfe",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9c04965e-758a-403d-b4e2-b1e0a412590d",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e28528bb-4e8f-43ae-8a3b-e3809e3b387a",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7c442f83-3ebe-438d-9670-62df8a10530c",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "678fff70-d8f4-4dff-b1b7-cfe4cd3cfb2b",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "2f0e3bfe-ac7c-42b1-ab08-c7c1c20f6128",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5"
  },
  "keycloakVersion": "17.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
