---
name: CI

env:
  MAVEN_CLI_OPTS: '-Dspring.main.banner-mode=off --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true'
  MAVEN_OPTS: '-Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true'

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - KEYCLOAK_VERSION: 8.0.1
          - KEYCLOAK_VERSION: 9.0.3
          - KEYCLOAK_VERSION: 10.0.1
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}

      - name: Build & Test
        env: ${{ matrix.env }}
        run: >-
          mvn ${MAVEN_CLI_OPTS} -Dkeycloak.version=${KEYCLOAK_VERSION} clean verify

      #      - name: Setup graalvm
      #        uses: DeLaGuardo/setup-graalvm@3
      #        with:
      #          graalvm-version: '20.1.0.java8'
      #
      #      - name: Install native-image
      #        env: ${{ matrix.env }}
      #        run: |-
      #          gu install native-image
      #          native-image --version
      #
      #      - name: Build native-image
      #        env: ${{ matrix.env }}
      #        run: >-
      #          mvn ${MAVEN_CLI_OPTS} -Dkeycloak.version=${KEYCLOAK_VERSION} clean package -DskipTests -P graal,graal-native-image
      #
      #      - uses: actions/upload-artifact@v1
      #        with:
      #          name: keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}-native-linux
      #          path: target/de.adorsys.keycloak.config.keycloakconfigapplication

      - uses: actions/upload-artifact@v1
        with:
          name: keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar
          path: target/keycloak-config-cli.jar

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}

      - name: Build & Test
        run: >-
          mvn ${MAVEN_CLI_OPTS} clean verify -Pcoverage,pmd,spotbugs
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: "${{ github.workspace }}/target/site/jacoco/jacoco.xml"
          fail_ci_if_error: true

      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v2.6.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          JACOCO_SOURCE_PATH: "src/main/java"
        with:
          coverageCommand: true
          coverageLocations: "${{ github.workspace }}/target/site/jacoco/jacoco.xml:jacoco"
