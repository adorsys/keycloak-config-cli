---
name: CI

env:
  MAVEN_CLI_OPTS: '-Dspring.main.banner-mode=off -ntp --batch-mode --errors --fail-at-end --show-version'
  TESTCONTAINERS_RYUK_DISABLED: 'true'

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - KEYCLOAK_VERSION: 8.0.1
          - KEYCLOAK_VERSION: 9.0.3
          - KEYCLOAK_VERSION: 10.0.2
    steps:
      - uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}

      - name: Build & Test
        env: ${{ matrix.env }}
        run: >-
          mvn ${MAVEN_CLI_OPTS} -Dkeycloak.version=${KEYCLOAK_VERSION} clean verify

      - uses: actions/upload-artifact@v2
        with:
          name: keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar
          path: target/keycloak-config-cli.jar

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-coverage-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-coverage

      - name: Build & Test
        run: >-
          mvn ${MAVEN_CLI_OPTS} clean verify -Pcoverage
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: "${{ github.workspace }}/target/site/jacoco/jacoco.xml"
          fail_ci_if_error: true

      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v2.6.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          JACOCO_SOURCE_PATH: "src/main/java"
        with:
          coverageCommand: true
          coverageLocations: "${{ github.workspace }}/target/site/jacoco/jacoco.xml:jacoco"
  build-native:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        env:
          - KEYCLOAK_VERSION: 10.0.2
    steps:
      - uses: actions/checkout@v2

      - name: Setup graalvm
        uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: '20.1.0.java8'

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}

      - name: Install native-image
        env: ${{ matrix.env }}
        run: |-
          gu install --no-progress native-image
          native-image --version

      - name: Build native-image
        env: ${{ matrix.env }}
        run: >-
          mvn ${MAVEN_CLI_OPTS} -Dkeycloak.version=${KEYCLOAK_VERSION} clean package -DskipTests -P native

      - name: Test native-image
        env: ${{ matrix.env }}
        run: |-
          printf 'KEYCLOAK_VERSION=%s' "${KEYCLOAK_VERSION}" > .env
          docker-compose up -d keycloak
          ./docker/root/usr/local/bin/wtfc -T 120 -S 0 -I 2 curl -f http://localhost:8080/auth
          ./contrib/native/test-with-import-files.sh
          docker-compose down

      - name: Docker Build native-image
        env: ${{ matrix.env }}
        run: |-
          docker build -f contrib/native/Dockerfile -t adorsys/keycloak-config-cli:master-${{ matrix.env }}-native .

      - uses: actions/upload-artifact@v2
        with:
          name: keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}-native-linux
          path: target/keycloak-config-cli-native

  automerge:
    name: Merge pull request
    runs-on: ubuntu-latest
    needs: [build, coverage]
    if: github.base_ref == 'master' && github.actor == 'dependabot[bot]' && !contains(github.event.pull_request.title, 'keycloak')
    steps:
      - name: Merge
        uses: actions/github-script@v2
        with:
          script: |
            github.pullRequests.merge({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number
            })

  lint-github-action-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v1
        with:
          strict: true
          file_or_dir: .github/workflows/*.yaml
          config_data: "{extends: default, rules: {line-length: disable, truthy: {check-keys: false}}}"

  check-licence-header:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-licence-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-licence

      - name: Check licence
        run: |-
          mvn ${MAVEN_CLI_OPTS} clean license:check-file-header -Dlicense.failOnMissingHeader=true -Dlicense.failOnNotUptodateHeader=true
          echo Run 'mvn license:update-file-header' to fix the licence headers

  lint-dockerfile-and-helm-chart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-coverage-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-coverage

      - name: Build keycloak-config-cli
        run: mvn clean package -DskipTests

      - name: Test Dockerfile
        run: docker build -t adorsys/keycloak-config-cli .

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Run chart-testing (lint)
        id: lint
        uses: helm/chart-testing-action@v1.0.0-rc.2
        with:
          command: lint
          config: contrib/charts/ct.yaml
