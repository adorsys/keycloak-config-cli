---
name: Release

on:
  push:
    tags:
      - 'v*'

env:
  MAVEN_CLI_OPTS: '-ntp --batch-mode --errors --fail-at-end --show-version -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -Dstyle.color=always'
  TESTCONTAINERS_RYUK_DISABLED: 'true'

# https://github.com/actions/create-release/issues/14
# https://dev.to/eugenebabichenko/automated-multi-platform-releases-with-github-actions-1abg

jobs:
  create_release:
    name: Create Release
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_version: ${{ steps.get_version.outputs.VERSION }}
      is_prerelease: ${{ steps.prerelease.outputs.PRERELEASE }}
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Identify Prerelease
        # This is a workaround while waiting for create-release action
        # to implement auto pre-release based on tag
        id: prerelease
        run: |
          [[ "${VERSION}" =~ .*rc.* || "${VERSION}" =~ .*beta.* || "${VERSION}" =~ .*alpha.* ]] && echo "::set-output name=PRERELEASE::true" || true
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ steps.prerelease.outputs.PRERELEASE }}
          body: |-
            # CHANGELOG

            * https://github.com/adorsys/keycloak-config-cli/blob/${{ steps.get_version.outputs.VERSION }}/CHANGELOG.md

            ## DockerHub

            * https://hub.docker.com/r/adorsys/keycloak-config-cli/tags?name=${{ steps.get_version.outputs.VERSION }}

            ## Quay.io

            * https://quay.io/repository/adorsys/keycloak-config-cli?tab=tags

  release_assets:
    name: Release assets
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        env:
          - KEYCLOAK_VERSION: 14.0.0
          - KEYCLOAK_VERSION: 15.1.1
          - KEYCLOAK_VERSION: 16.1.1
          - KEYCLOAK_VERSION: 17.0.0
    steps:
      - uses: actions/checkout@v3

      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      - uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}

      - name: Build & Test
        run: ./mvnw ${MAVEN_CLI_OPTS} -Dkeycloak.version=${{ matrix.env.KEYCLOAK_VERSION }} clean verify

      - name: Get latest keycloak version
        id: latest
        run: echo "::set-output name=VERSION::$(tail -n1 .env | cut -d= -f2)"

      - id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v3.6.2
        with:
          images: adorsys/keycloak-config-cli,quay.io/adorsys/keycloak-config-cli
          flavor: |
            latest=${{ matrix.env.KEYCLOAK_VERSION == steps.latest.outputs.VERSION }}
            suffix=-${{ matrix.env.KEYCLOAK_VERSION }}
          tags: |
            type=raw,value=${{ needs.create_release.outputs.release_version }}
            type=raw,value=latest,enable=${{ needs.create_release.outputs.is_prerelease != 'true' }}
          labels: |
            maintainer=adorsys GmbH & Co. KG

      - name: Login to Docker Hub
        uses: docker/login-action@v1.14.1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to Quay.io
        uses: docker/login-action@v1.14.1
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2.9.0
        with:
          build-args: KEYCLOAK_VERSION=${{ matrix.env.KEYCLOAK_VERSION }}
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: target/keycloak-config-cli.jar
          asset_name: keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Create Checksum
        run: |
          cp target/keycloak-config-cli.jar keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar
          sha256sum keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar > keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar.sha256

      - name: Upload Checksum
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar.sha256
          asset_name: keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar.sha256
          asset_content_type: text/plain
