---
on:
  push:
    tags:
      - 'v*'

env:
  DOCKER_IMAGE_NAME: adorsys/keycloak-config-cli
  MAVEN_CLI_OPTS: '-ntp --batch-mode --errors --fail-at-end --show-version'
  TESTCONTAINERS_RYUK_DISABLED: 'true'

# https://github.com/actions/create-release/issues/14
# https://dev.to/eugenebabichenko/automated-multi-platform-releases-with-github-actions-1abg

name: Release

jobs:
  create_release:
    name: Create Release
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Identify Prerelease
        # This is a workaround while waiting for create-release action
        # to implement auto pre-release based on tag
        id: prerelease
        run: |
          [[ "${VERSION}" =~ .*rc.* || "${VERSION}" =~ .*beta.* || "${VERSION}" =~ .*alpha.* ]] && echo "::set-output name=PRERELEASE::true" || true
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ steps.prerelease.outputs.PRERELEASE }}
          body: |-
            # CHANGELOG

            * https://github.com/adorsys/keycloak-config-cli/blob/${{ steps.get_version.outputs.VERSION }}/CHANGELOG.md

            ## DockerHub

            * https://hub.docker.com/r/adorsys/keycloak-config-cli/tags?name=${{ steps.get_version.outputs.VERSION }}

  release_assets:
    name: Release assets
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        env:
          - KEYCLOAK_VERSION: 9.0.3
          - KEYCLOAK_VERSION: 10.0.2
          - KEYCLOAK_VERSION: 11.0.3
          - KEYCLOAK_VERSION: 12.0.2
            IS_LATEST: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ matrix.env.KEYCLOAK_VERSION }}

      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV

      - name: Build & Test
        env:
          KEYCLOAK_VERSION: ${{ matrix.env.KEYCLOAK_VERSION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          mvn ${MAVEN_CLI_OPTS} -Dkeycloak.version=${KEYCLOAK_VERSION} clean verify

      - name: docker login
        run: |-
          echo "${REGISTRY_PASSWORD}" | docker login --username "${REGISTRY_USERNAME}" --password-stdin
          echo "${GITHUB_TOKEN}" | docker login --username '$GITHUB_ACTOR' --password-stdin docker.pkg.github.com
        env:
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: docker build
        env: ${{ matrix.env }}
        run: docker build --pull -t "${DOCKER_IMAGE_NAME}:${RELEASE_VERSION}-${KEYCLOAK_VERSION}" .
        working-directory: ${{ matrix.env.DIR }}

      - name: Publish Image on DockerHub
        env: ${{ matrix.env }}
        run: |
          docker tag "${DOCKER_IMAGE_NAME}:${RELEASE_VERSION}-${KEYCLOAK_VERSION}" "${DOCKER_IMAGE_NAME}:latest-${KEYCLOAK_VERSION}"
          docker tag "${DOCKER_IMAGE_NAME}:${RELEASE_VERSION}-${KEYCLOAK_VERSION}" "docker.pkg.github.com/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME#*/}:latest-${KEYCLOAK_VERSION}"
          docker tag "${DOCKER_IMAGE_NAME}:${RELEASE_VERSION}-${KEYCLOAK_VERSION}" "docker.pkg.github.com/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME#*/}:${RELEASE_VERSION}-${KEYCLOAK_VERSION}"
          docker push "${DOCKER_IMAGE_NAME}:${RELEASE_VERSION}-${KEYCLOAK_VERSION}"
          docker push "${DOCKER_IMAGE_NAME}:latest-${KEYCLOAK_VERSION}"
          docker push "docker.pkg.github.com/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME#*/}:${RELEASE_VERSION}-${KEYCLOAK_VERSION}"
          docker push "docker.pkg.github.com/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME#*/}:latest-${KEYCLOAK_VERSION}"

          if [ "${IS_LATEST}" = true ]; then
            docker tag "${DOCKER_IMAGE_NAME}:${RELEASE_VERSION}-${KEYCLOAK_VERSION}" ${DOCKER_IMAGE_NAME}:latest
            docker tag "${DOCKER_IMAGE_NAME}:${RELEASE_VERSION}-${KEYCLOAK_VERSION}" docker.pkg.github.com/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME#*/}:latest
            docker push ${DOCKER_IMAGE_NAME}:latest
            docker push docker.pkg.github.com/${GITHUB_REPOSITORY}/${DOCKER_IMAGE_NAME#*/}:latest
          fi

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: target/keycloak-config-cli.jar
          asset_name: keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Create Checksum
        run: |
          cp target/keycloak-config-cli.jar keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar
          sha256sum keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar > keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar.sha256

      - name: Upload Checksum
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar.sha256
          asset_name: keycloak-config-cli-${{ matrix.env.KEYCLOAK_VERSION }}.jar.sha256
          asset_content_type: text/plain
